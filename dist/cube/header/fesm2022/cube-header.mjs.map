{"version":3,"file":"cube-header.mjs","sources":["../../../../projects/cube/header/src/lib/component/header.component.ts","../../../../projects/cube/header/src/lib/component/header.component.html","../../../../projects/cube/header/src/lib/header.module.ts","../../../../projects/cube/header/src/public-api.ts","../../../../projects/cube/header/src/cube-header.ts"],"sourcesContent":["import { Component,Input,OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { faCube } from '@fortawesome/free-solid-svg-icons';\nimport { KeycloakService } from 'keycloak-angular';\nimport { KeycloakLoginOptions } from 'keycloak-js';\nimport { AuthService, Language, Status, UserDTO, UserService, WebSocketService } from '../types/types';\n\n@Component({\n  selector: 'cube-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Input() auth!: AuthService;\n  @Input() webSocket!: WebSocketService;\n  @Input() userService!: UserService;\n  @Input() properties: any; // Tipo da definire in base alle tue properties\n  @Input() keycloakLoginOptions!: KeycloakLoginOptions;\n\n  userDTO?: UserDTO;\n  imgSrc?: string = 'assets/images/profile.jpg';\n  icon = faCube;\n  languages: Language[] = [];\n  isNavbarCollapsed = true;\n\n  stati: Status[] = [\n    {\n      name: 'online',\n      iconPath: 'assets/images/ONLINE.png',\n    },\n    {\n      name: 'busy',\n      iconPath: 'assets/images/BUSY.png',\n    },\n    {\n      name: 'invisible',\n      iconPath: 'assets/images/INVISIBLE.png',\n    },\n  ];\n\n  constructor(\n    private keycloak: KeycloakService,\n    private translateService: TranslateService,\n  ) {\n    this.languages.push(\n      {\n        name: 'English',\n        langIdentifier: 'en-EN',\n        flagPath: 'assets/images/en-EN.png',\n      },\n      {\n        name: 'Italiano',\n        langIdentifier: 'it-IT',\n        flagPath: 'assets/images/it-IT.png',\n      },\n      {\n        name: 'Français',\n        langIdentifier: 'fr-FR',\n        flagPath: 'assets/images/fr-FR.png',\n      }\n    );\n    this.languages.sort();\n  }\n\n  //Questo ngOnInit ascolta le modifiche nell'oggetto userDTO all'interno del servizio\n  //auth e aggiorna le proprietà del componente (userDTO e la lingua predefinita tramite\n  //TranslateService) in base a tali modifiche. Questo può essere utilizzato per inizializzare\n  //o aggiornare le informazioni del componente in base allo stato dell'utente.\n  ngOnInit(): void {\n    // Sottoscrizione all'observable userDTOBehaviorSubject all'interno del servizio auth\n    this.auth.userDTOBehaviorSubject.subscribe({\n      next: (receivedUserDTO: any) => {\n        // La funzione di callback 'next' viene chiamata quando c'è una modifica nell'oggetto userDTO\n        // Imposta la proprietà userDTO del componente con il nuovo valore ricevuto\n        this.userDTO = receivedUserDTO;\n        this.translateService.use(\n          // Utilizza il servizio di traduzione (TranslateService) per impostare la lingua predefinita\n          // dall'oggetto propertiesDTO dell'utente corrente\n          this.userDTO?.propertiesDTO?.defaultLanguage!\n        );\n      },\n    });\n  }\n\n  login() {\n    this.keycloak.login(this.keycloakLoginOptions);\n    // this.keycloak.getKeycloakInstance().onAuthLogout()\n  }\n\n  logout(): void {\n    this.webSocket.disconnect().then(() => {\n      this.keycloak.logout(this.properties.redirectUri);\n    });\n  }\n\n  changeLanguage(lang: string) {\n    // Utilizza il servizio di traduzione (TranslateService) per impostare la lingua dell'applicazione\n    this.translateService.use(lang);\n  }\n\n  updateStatus(status: string) {\n    this.userService.updateStatus(status).subscribe({\n      next: (response) => {\n        if (response && this.userDTO) {  // aggiungi controllo\n          this.userDTO.propertiesDTO!.status = status;\n          this.auth.userDTOBehaviorSubject.next(this.userDTO);  // ora TypeScript sa che userDTO non è undefined\n        }\n      },\n    });\n  }\n}","<nav class=\"navbar navbar-expand-xl\">\r\n    <div class=\"container-fluid\">\r\n\r\n        <!-- ## NAVBAR HOME TO PORTAL ## -->\r\n        <div class=\"navbar-brand\">\r\n            <a href=\"https://docmon.pccube.com/portal\">\r\n                <img alt=\"cubePortalLogo\" class=\"home\" src=\"assets/images/pccube-solo-cubo.png\">\r\n            </a>\r\n        </div>\r\n\r\n        <!-- ## NAVBAR LOGO ## -->\r\n        <div class=\"navbar-brand\">\r\n            <img alt=\"cubeChatLogo\" routerLink=\"/\" style=\"cursor:pointer;width: 275px; height: 50px;\"\r\n                src=\"assets/images/pccube.png\">\r\n        </div>\r\n\r\n        <!-- ## NAVBAR TOGGLER - QUANDO SCHERMO PICCOLO ## -->\r\n        <button class=\"navbar-toggler shadow-none\" (click)=\"isNavbarCollapsed = !isNavbarCollapsed\">\r\n            <span>\r\n                <img alt=\"navbarToggler\" src=\"assets/images/navbar-toggler.png\">\r\n            </span>\r\n        </button>\r\n\r\n        <!-- ## CORPO DELLA NAVBAR COLLASSABILE ## -->\r\n        <div class=\"collapse navbar-collapse justify-content-end\" [ngbCollapse]=\"isNavbarCollapsed\">\r\n            <!-- ## LISTA DEGLI ELEMENTI DELLA NAVBAR ## -->\r\n            <ul class=\"list-group list-group-horizontal align-items-center justify-content-center\">\r\n\r\n                <!-- ## NOME E COGNOME UTENTE - SOLO TESTO ## -->\r\n                <li *ngIf=\"isNavbarCollapsed\" class=\"list-group-item\">\r\n                    <div class=\"nav-link user-menu\">\r\n                        {{userDTO?.name}} {{userDTO?.surname}}\r\n                    </div>\r\n                </li>\r\n\r\n                <li *ngIf=\"userDTO\" ngbDropdown class=\"list-group-item\">\r\n                    <div ngbDropdown class=\"dropdown\">\r\n                        <button ngbDropdownToggle class=\"user-menu\">\r\n                            <img alt=\"user status\" src=\"assets/images/{{ userDTO!.propertiesDTO!.status }}.png\" />\r\n                        </button>\r\n                        <div ngbDropdownMenu>\r\n                            <button *ngFor=\"let status of stati\" class=\"btn\" ngbDropdownItem\r\n                                (click)=\"updateStatus(status.name)\">\r\n                                <img class=\"me-2\" alt=\"{{status.name}}\" src=\"{{ status.iconPath }}\" />\r\n                                {{\"generic.\" + status.name | translate}}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n\r\n                <!-- ## USER MENU ## -->\r\n                <li ngbDropdown class=\"list-group-item\">\r\n                    <button *ngIf=\"!userDTO\" class=\"user-menu\" (click)=\"login()\">{{'Login'}}</button>\r\n                    <div *ngIf=\"userDTO\">\r\n                        <button ngbDropdownToggle class=\"user-menu\">\r\n                            <img alt=\"profilePicture\" class=\"rounded-5\" src=\"{{userDTO.propertiesDTO?.profilePicture}}\"\r\n                                width=\"32\" height=\"32\">\r\n                        </button>\r\n                        <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                            <button ngbDropdownItem routerLink=\"/profile\">{{\"generic.profile\"|translate}}</button>\r\n                            <button ngbDropdownItem (click)=\"logout()\">{{'Logout'}}</button>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n\r\n                <!-- ## LANGUAGE SELECTOR ## -->\r\n                <li ngbDropdown class=\"list-group-item\">\r\n                    <button ngbDropdownToggle class=\"user-menu\">\r\n                        <!--\r\n                            Aggiungere salvataggio a db e update\r\n                            <img src='assets/images/{{userDto?.propertiesDTO?.defaultLanguage}}.png'>\r\n                        -->\r\n                        <img alt=\"languageFlag\" src='{{\"lang.flag-picture\" | translate}}'>\r\n                    </button>\r\n                    <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                        <button *ngFor=\"let language of languages\" ngbDropdownItem\r\n                            (click)=\"changeLanguage(language.langIdentifier)\">\r\n                            <img alt=\"flagLanguageDropdown\" src='{{language.flagPath}}'>\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n\r\n            </ul>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</nav>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { HeaderComponent } from './component/header.component';\n\n\n@NgModule({\n  declarations: [HeaderComponent],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    FontAwesomeModule,\n    NgbModule,\n    RouterModule\n  ],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule { }","/*\n * Public API Surface of header\n */\nexport * from './lib/component/header.component';\nexport * from './lib/header.module';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}