import { Component, Inject, Input } from '@angular/core';
import { faCube } from '@fortawesome/free-solid-svg-icons';
import { DatePipe } from '@angular/common';
import { IMAGES } from '../../constants/image-constants';
import * as i0 from "@angular/core";
import * as i1 from "keycloak-angular";
import * as i2 from "@ngx-translate/core";
import * as i3 from "../../services/auth/auth.service";
import * as i4 from "../../services/websocket/websocket.service";
import * as i5 from "../../services/user/user.service";
import * as i6 from "../../services/notification/notification.service";
import * as i7 from "@angular/common";
import * as i8 from "@ng-bootstrap/ng-bootstrap";
import * as i9 from "@angular/router";
export class HeaderComponent {
    constructor(keycloak, translateService, auth, webSocket, userService, notificationService, config) {
        this.keycloak = keycloak;
        this.translateService = translateService;
        this.auth = auth;
        this.webSocket = webSocket;
        this.userService = userService;
        this.notificationService = notificationService;
        this.config = config;
        this.showNotifications = false;
        //valori di default per i loghi
        /**
         * va passato il path dell'immagine nel selector del component padre
         * per es.
         * <cube-header
         * cubeLogo="assets/images/your-cube-logo.png"
         * portalLogo="assets/images/your-portal-logo.png">
         * </cube-header>
        */
        this.iconLogo = 'assets/images/pccube-solo-cubo.png'; // valore di default
        this.bigLogo = 'assets/images/cube-portal-logo1.png'; // valore di default
        this.images = IMAGES;
        this.imgSrc = 'assets/images/profile.jpg';
        this.icon = faCube;
        this.languages = [];
        this.isNavbarCollapsed = true;
        this.listNotifications = [];
        this.notificationsCount = 0;
        this.totalUnredMessagesCount = 0;
        this.stati = [
            {
                name: 'online',
                iconPath: this.images.ONLINE
            },
            {
                name: 'busy',
                iconPath: this.images.BUSY
            },
            {
                name: 'invisible',
                iconPath: this.images.INVISIBLE
            },
        ];
        console.log('HeaderComponent costruttore chiamato');
        this.keycloakLoginOptions = {
            redirectUri: this.config.loginRedirectChatHomePage,
        };
        this.languages = [
            {
                name: 'English',
                langIdentifier: 'en-EN',
                flagPath: this.images.EN_EN,
            },
            {
                name: 'Italiano',
                langIdentifier: 'it-IT',
                flagPath: this.images.IT_IT,
            },
            {
                name: 'Français',
                langIdentifier: 'fr-FR',
                flagPath: this.images.FR_FR,
            }
        ].sort();
    }
    ngOnInit() {
        this.keycloak.isLoggedIn().then(isLoggedIn => {
            if (isLoggedIn) {
                this.keycloak.loadUserProfile().then(profile => {
                    this.auth.updateKeycloakProfile(profile);
                    if (this.showNotifications) {
                        this.initializeNotifications();
                    }
                });
            }
        });
        this.auth.userDTOBehaviorSubject.subscribe({
            next: (receivedUserDTO) => {
                if (receivedUserDTO) {
                    this.userDTO = receivedUserDTO;
                    if (receivedUserDTO.propertiesDTO?.defaultLanguage) {
                        this.translateService.use(receivedUserDTO.propertiesDTO.defaultLanguage);
                    }
                }
            }
        });
        if (this.showNotifications) {
            this.webSocketSubscription = this.webSocket.newNotification.subscribe({
                next: (ping) => {
                    if (ping) {
                        this.updateNotifications();
                    }
                }
            });
        }
    }
    ngOnDestroy() {
        if (this.webSocketSubscription) {
            this.webSocketSubscription.unsubscribe();
        }
        if (this.timer) {
            clearTimeout(this.timer);
        }
    }
    initializeNotifications() {
        if (!this.showNotifications)
            return;
        this.notificationService.getNotifications().subscribe(notifications => {
            this.listNotifications = notifications;
            ;
            if (notifications.some(notification => notification.app == this.config.appIdentifier)) {
                this.notificationService.getTotalUnreadNotificationCount().subscribe(count => {
                    this.totalUnredMessagesCount = count;
                    this.setNotification();
                });
            }
        });
    }
    setNotification() {
        if (!this.showNotifications)
            return;
        this.transformDateNotification();
        this.countNotifications();
    }
    transformDateNotification() {
        const datePipe = new DatePipe('en-US');
        this.listNotifications.forEach((notification) => notification.sentAt = datePipe.transform(notification.sentAt, 'dd/MM/yyyy - HH:mm:ss'));
    }
    countNotifications() {
        this.notificationsCount = 0;
        this.listNotifications.forEach((notification) => {
            if (!notification.read && ((notification.app != this.config.appIdentifier) || (notification.app == this.config.appIdentifier && this.totalUnredMessagesCount != 0))) {
                this.notificationsCount += 1;
            }
        });
    }
    readAllNotifications() {
        if (!this.showNotifications)
            return;
        this.notificationService.readAllNotifications().subscribe();
        this.listNotifications.forEach(notification => notification.read = true);
        this.countNotifications();
    }
    updateNotifications() {
        if (!this.showNotifications)
            return;
        this.notificationService.getNotifications().subscribe(notifications => {
            this.listNotifications = notifications;
            ;
            this.setNotification();
        });
    }
    readNotificationAfterMouseStand(event, id) {
        if (!this.showNotifications)
            return;
        this.timer = setTimeout(() => {
            event.target.classList.remove('notification-text-new');
            this.notificationService.readOneNotification(id).subscribe();
            this.listNotifications.forEach((notification) => {
                if (notification.id == id) {
                    notification.read = true;
                }
            });
            this.countNotifications();
        }, 1000);
    }
    abortReadNotificationAfterMouseStand() {
        if (!this.showNotifications)
            return;
        clearTimeout(this.timer);
    }
    redirect(notification) {
        if (!this.showNotifications)
            return;
        if (notification.app == this.config.appIdentifier && this.properties?.chatUrl) {
            window.location.href = this.properties.chatUrl;
        }
    }
    login() {
        this.keycloak.login(this.keycloakLoginOptions);
    }
    logout() {
        this.webSocket.disconnect().then(() => {
            this.keycloak.logout(this.config.redirectUri);
        });
    }
    changeLanguage(lang) {
        this.translateService.use(lang);
    }
    updateStatus(status) {
        this.userService.updateStatus(status).subscribe({
            next: (response) => {
                if (response && this.userDTO) {
                    this.userDTO.propertiesDTO.status = status;
                    this.auth.userDTOBehaviorSubject.next(this.userDTO);
                }
            },
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: HeaderComponent, deps: [{ token: i1.KeycloakService }, { token: i2.TranslateService }, { token: i3.AuthService }, { token: i4.WebSocketService }, { token: i5.UserService }, { token: i6.NotificationService }, { token: 'SHARED_CONFIG' }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: HeaderComponent, selector: "cube-header", inputs: { properties: "properties", showNotifications: "showNotifications", iconLogo: "iconLogo", bigLogo: "bigLogo" }, ngImport: i0, template: "<nav class=\"navbar navbar-expand-xl\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"navbar-brand\">\r\n            <a href=\"https://docmon.pccube.com/portal\">\r\n                <img alt=\"cubePortalLogo\" class=\"home\" [src]=\"iconLogo\">\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"navbar-brand\">\r\n            <img alt=\"cube portal logo\" routerLink=\"/\" style=\"cursor:pointer; width: 275px; height: 50px;\"\r\n                [src]=\"bigLogo\">\r\n        </div>\r\n\r\n        <button class=\"navbar-toggler shadow-none\" (click)=\"isNavbarCollapsed = !isNavbarCollapsed\">\r\n            <span>\r\n                <img alt=\"navbar toggler\" [src]=\"images.NAVBAR_TOGGLER\">\r\n            </span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse justify-content-end\" [ngbCollapse]=\"isNavbarCollapsed\">\r\n            <ul class=\"list-group list-group-horizontal align-items-center justify-content-center\">\r\n                <li *ngIf=\"isNavbarCollapsed\" class=\"list-group-item\">\r\n                    <div class=\"nav-link user-menu\">\r\n                        {{userDTO?.name}} {{userDTO?.surname}}\r\n                    </div>\r\n                </li>\r\n\r\n                <li *ngIf=\"userDTO\" ngbDropdown class=\"list-group-item\">\r\n                    <div ngbDropdown class=\"dropdown\">\r\n                        <button ngbDropdownToggle class=\"user-menu\">\r\n                            <img alt=\"user status\" src=\"assets/images/{{ userDTO!.propertiesDTO!.status }}.png\" />\r\n                        </button>\r\n                        <div ngbDropdownMenu>\r\n                            <button *ngFor=\"let status of stati\" class=\"btn\" ngbDropdownItem\r\n                                (click)=\"updateStatus(status.name)\">\r\n                                <img class=\"me-2\" alt=\"{{status.name}}\" src=\"{{ status.iconPath }}\" />\r\n                                {{\"generic.\" + status.name | translate}}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n\r\n                <li ngbDropdown class=\"list-group-item\">\r\n                    <button *ngIf=\"!userDTO\" class=\"user-menu\" (click)=\"login()\">{{'Login'}}</button>\r\n                    <div *ngIf=\"userDTO\">\r\n                        <button ngbDropdownToggle class=\"user-menu\">\r\n                            <img alt=\"profilePicture\" class=\"rounded-5\" src=\"{{userDTO.propertiesDTO?.profilePicture}}\"\r\n                                width=\"32\" height=\"32\">\r\n                        </button>\r\n                        <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                            <button ngbDropdownItem routerLink=\"/profile\">{{\"generic.profile\"|translate}}</button>\r\n                            <button ngbDropdownItem (click)=\"logout()\">{{'Logout'}}</button>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n\r\n                <!-- Notifications Menu - Only shown when showNotifications is true -->\r\n                <li *ngIf=\"showNotifications\" ngbDropdown [autoClose]=\"false\" class=\"list-group-item dropdown\">\r\n                    <div>\r\n                        <button alt=\"notification toggle\" ngbDropdownToggle class=\"user-menu\">\r\n                            <img height=\"32px\" alt=\"notification toggle\" [src]=\"images.BELL\" (click)=\"updateNotifications()\">\r\n                            <span *ngIf=\"notificationsCount!=0\" class=\"badge\">{{notificationsCount}}</span>\r\n                        </button>\r\n                        <ul ngbDropdownMenu class=\"dropdown-menu dropdown-menu-end\">\r\n                            <li ngbDropdownItem class=\"\">\r\n                                <div class=\"row d-flex justify-content-between align-items-center\">\r\n                                    <div class=\"col-10\">\r\n                                        <button class=\"dropdown-item p-0\"\r\n                                            routerLink=\"/notifications\"><strong>{{\"generic.notification-word\"|translate}}</strong></button>\r\n                                    </div>\r\n                                    <div class=\"col-2\">\r\n                                        <img style=\"cursor:pointer\" height=\"16px\" alt=\"read all notification\"\r\n                                            [src]=\"images.READ_ALL\" (click)=\"readAllNotifications()\">\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li *ngFor=\"let notification of listNotifications\" ngbDropdownItem>\r\n                                <div class=\"row\">\r\n                                    <div [ngClass]=\"notification.read ? 'col-12' : 'col-10'\" class=\"col\">\r\n                                        <div *ngIf=\"!notification.read && ((notification.app!='Chat') || (notification.app=='Chat' && totalUnredMessagesCount!=0))\"\r\n                                            class=\"notification-text notification-text-new\"\r\n                                            (mouseenter)=\"readNotificationAfterMouseStand($event, notification.id)\"\r\n                                            (mouseleave)=\"abortReadNotificationAfterMouseStand()\"\r\n                                            (click)=\"redirect(notification)\"\r\n                                            [ngClass]=\"notification.app == 'Chat' ? 'clickable' : null\">\r\n                                            <h5 class=\"my-auto\">{{notification.sentAt}}:</h5>\r\n                                            <span *ngIf=\"notification.app == 'Chat'\">{{totalUnredMessagesCount}}</span>\r\n                                            {{notification.message | translate}}\r\n                                            <hr class=\"dropdown-divider\">\r\n                                        </div>\r\n                                        <div *ngIf=\"notification.read && ((notification.app!='Chat') || (notification.app=='Chat' && totalUnredMessagesCount!=0))\"\r\n                                            class=\"notification-text text-muted\" (click)=\"redirect(notification)\"\r\n                                            [ngClass]=\"notification.app == 'Chat' ? 'clickable' : null\">\r\n                                            <h5 class=\"my-auto\">{{notification.sentAt}}:</h5>\r\n                                            <span *ngIf=\"notification.app == 'Chat'\">{{totalUnredMessagesCount}}</span>\r\n                                            {{notification.message | translate}}\r\n                                            <hr class=\"dropdown-divider\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"!notification.read && ((notification.app!='Chat') || (notification.app=='Chat' && totalUnredMessagesCount!=0))\"\r\n                                        class=\"col-2\">\r\n                                        <img [src]=\"images.ENVELOPE\" alt=\"envelope icon\">\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n\r\n                <li ngbDropdown class=\"list-group-item\">\r\n                    <button ngbDropdownToggle class=\"user-menu\">\r\n                        <img alt=\"language flag\" src='{{\"lang.flag-picture\"|translate}}'>\r\n                    </button>\r\n                    <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                        <button *ngFor=\"let language of languages\" ngbDropdownItem\r\n                            (click)=\"changeLanguage(language.langIdentifier)\">\r\n                            <img alt=\"language flag\" src='{{language.flagPath}}'>\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>", styles: ["div.container-fluid{background:#130044;box-shadow:0 10px 50px #13004440;border-radius:.625rem;margin:1.125rem 1.25rem 0rem;min-height:5.813rem;height:100px}.navbar-brand{position:relative;left:50%;transform:translate(-50%);display:block}li.list-group-item{background:transparent;border:none}.dropdown-menu{border-radius:.625rem;min-width:inherit;padding:.25rem}button:hover,li.dropdown-item{background-color:transparent}.user-menu{border:none;background:transparent;color:#fff;white-space:nowrap}img.rounded-5{object-fit:cover}.badge{background-color:#fff;color:#130044}.dropdown-notification-toggle{color:#130044}.notification-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;max-width:21rem}.notification-text-new{color:#130044}ul.dropdown-menu{min-width:15rem;max-height:10rem;overflow-y:auto}li:active{color:#130044}hr.dropdown-divider{margin:auto;margin-top:.125rem;margin-bottom:.125rem}.home{position:absolute;left:-800px;top:-5px;height:25px;width:25px}\n"], dependencies: [{ kind: "directive", type: i7.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i7.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i8.NgbCollapse, selector: "[ngbCollapse]", inputs: ["animation", "ngbCollapse", "horizontal"], outputs: ["ngbCollapseChange", "shown", "hidden"], exportAs: ["ngbCollapse"] }, { kind: "directive", type: i8.NgbDropdown, selector: "[ngbDropdown]", inputs: ["autoClose", "dropdownClass", "open", "placement", "popperOptions", "container", "display"], outputs: ["openChange"], exportAs: ["ngbDropdown"] }, { kind: "directive", type: i8.NgbDropdownToggle, selector: "[ngbDropdownToggle]" }, { kind: "directive", type: i8.NgbDropdownMenu, selector: "[ngbDropdownMenu]" }, { kind: "directive", type: i8.NgbDropdownItem, selector: "[ngbDropdownItem]", inputs: ["disabled"] }, { kind: "directive", type: i9.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "pipe", type: i2.TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: HeaderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cube-header', template: "<nav class=\"navbar navbar-expand-xl\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"navbar-brand\">\r\n            <a href=\"https://docmon.pccube.com/portal\">\r\n                <img alt=\"cubePortalLogo\" class=\"home\" [src]=\"iconLogo\">\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"navbar-brand\">\r\n            <img alt=\"cube portal logo\" routerLink=\"/\" style=\"cursor:pointer; width: 275px; height: 50px;\"\r\n                [src]=\"bigLogo\">\r\n        </div>\r\n\r\n        <button class=\"navbar-toggler shadow-none\" (click)=\"isNavbarCollapsed = !isNavbarCollapsed\">\r\n            <span>\r\n                <img alt=\"navbar toggler\" [src]=\"images.NAVBAR_TOGGLER\">\r\n            </span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse justify-content-end\" [ngbCollapse]=\"isNavbarCollapsed\">\r\n            <ul class=\"list-group list-group-horizontal align-items-center justify-content-center\">\r\n                <li *ngIf=\"isNavbarCollapsed\" class=\"list-group-item\">\r\n                    <div class=\"nav-link user-menu\">\r\n                        {{userDTO?.name}} {{userDTO?.surname}}\r\n                    </div>\r\n                </li>\r\n\r\n                <li *ngIf=\"userDTO\" ngbDropdown class=\"list-group-item\">\r\n                    <div ngbDropdown class=\"dropdown\">\r\n                        <button ngbDropdownToggle class=\"user-menu\">\r\n                            <img alt=\"user status\" src=\"assets/images/{{ userDTO!.propertiesDTO!.status }}.png\" />\r\n                        </button>\r\n                        <div ngbDropdownMenu>\r\n                            <button *ngFor=\"let status of stati\" class=\"btn\" ngbDropdownItem\r\n                                (click)=\"updateStatus(status.name)\">\r\n                                <img class=\"me-2\" alt=\"{{status.name}}\" src=\"{{ status.iconPath }}\" />\r\n                                {{\"generic.\" + status.name | translate}}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n\r\n                <li ngbDropdown class=\"list-group-item\">\r\n                    <button *ngIf=\"!userDTO\" class=\"user-menu\" (click)=\"login()\">{{'Login'}}</button>\r\n                    <div *ngIf=\"userDTO\">\r\n                        <button ngbDropdownToggle class=\"user-menu\">\r\n                            <img alt=\"profilePicture\" class=\"rounded-5\" src=\"{{userDTO.propertiesDTO?.profilePicture}}\"\r\n                                width=\"32\" height=\"32\">\r\n                        </button>\r\n                        <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                            <button ngbDropdownItem routerLink=\"/profile\">{{\"generic.profile\"|translate}}</button>\r\n                            <button ngbDropdownItem (click)=\"logout()\">{{'Logout'}}</button>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n\r\n                <!-- Notifications Menu - Only shown when showNotifications is true -->\r\n                <li *ngIf=\"showNotifications\" ngbDropdown [autoClose]=\"false\" class=\"list-group-item dropdown\">\r\n                    <div>\r\n                        <button alt=\"notification toggle\" ngbDropdownToggle class=\"user-menu\">\r\n                            <img height=\"32px\" alt=\"notification toggle\" [src]=\"images.BELL\" (click)=\"updateNotifications()\">\r\n                            <span *ngIf=\"notificationsCount!=0\" class=\"badge\">{{notificationsCount}}</span>\r\n                        </button>\r\n                        <ul ngbDropdownMenu class=\"dropdown-menu dropdown-menu-end\">\r\n                            <li ngbDropdownItem class=\"\">\r\n                                <div class=\"row d-flex justify-content-between align-items-center\">\r\n                                    <div class=\"col-10\">\r\n                                        <button class=\"dropdown-item p-0\"\r\n                                            routerLink=\"/notifications\"><strong>{{\"generic.notification-word\"|translate}}</strong></button>\r\n                                    </div>\r\n                                    <div class=\"col-2\">\r\n                                        <img style=\"cursor:pointer\" height=\"16px\" alt=\"read all notification\"\r\n                                            [src]=\"images.READ_ALL\" (click)=\"readAllNotifications()\">\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li *ngFor=\"let notification of listNotifications\" ngbDropdownItem>\r\n                                <div class=\"row\">\r\n                                    <div [ngClass]=\"notification.read ? 'col-12' : 'col-10'\" class=\"col\">\r\n                                        <div *ngIf=\"!notification.read && ((notification.app!='Chat') || (notification.app=='Chat' && totalUnredMessagesCount!=0))\"\r\n                                            class=\"notification-text notification-text-new\"\r\n                                            (mouseenter)=\"readNotificationAfterMouseStand($event, notification.id)\"\r\n                                            (mouseleave)=\"abortReadNotificationAfterMouseStand()\"\r\n                                            (click)=\"redirect(notification)\"\r\n                                            [ngClass]=\"notification.app == 'Chat' ? 'clickable' : null\">\r\n                                            <h5 class=\"my-auto\">{{notification.sentAt}}:</h5>\r\n                                            <span *ngIf=\"notification.app == 'Chat'\">{{totalUnredMessagesCount}}</span>\r\n                                            {{notification.message | translate}}\r\n                                            <hr class=\"dropdown-divider\">\r\n                                        </div>\r\n                                        <div *ngIf=\"notification.read && ((notification.app!='Chat') || (notification.app=='Chat' && totalUnredMessagesCount!=0))\"\r\n                                            class=\"notification-text text-muted\" (click)=\"redirect(notification)\"\r\n                                            [ngClass]=\"notification.app == 'Chat' ? 'clickable' : null\">\r\n                                            <h5 class=\"my-auto\">{{notification.sentAt}}:</h5>\r\n                                            <span *ngIf=\"notification.app == 'Chat'\">{{totalUnredMessagesCount}}</span>\r\n                                            {{notification.message | translate}}\r\n                                            <hr class=\"dropdown-divider\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"!notification.read && ((notification.app!='Chat') || (notification.app=='Chat' && totalUnredMessagesCount!=0))\"\r\n                                        class=\"col-2\">\r\n                                        <img [src]=\"images.ENVELOPE\" alt=\"envelope icon\">\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n\r\n                <li ngbDropdown class=\"list-group-item\">\r\n                    <button ngbDropdownToggle class=\"user-menu\">\r\n                        <img alt=\"language flag\" src='{{\"lang.flag-picture\"|translate}}'>\r\n                    </button>\r\n                    <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                        <button *ngFor=\"let language of languages\" ngbDropdownItem\r\n                            (click)=\"changeLanguage(language.langIdentifier)\">\r\n                            <img alt=\"language flag\" src='{{language.flagPath}}'>\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>", styles: ["div.container-fluid{background:#130044;box-shadow:0 10px 50px #13004440;border-radius:.625rem;margin:1.125rem 1.25rem 0rem;min-height:5.813rem;height:100px}.navbar-brand{position:relative;left:50%;transform:translate(-50%);display:block}li.list-group-item{background:transparent;border:none}.dropdown-menu{border-radius:.625rem;min-width:inherit;padding:.25rem}button:hover,li.dropdown-item{background-color:transparent}.user-menu{border:none;background:transparent;color:#fff;white-space:nowrap}img.rounded-5{object-fit:cover}.badge{background-color:#fff;color:#130044}.dropdown-notification-toggle{color:#130044}.notification-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;max-width:21rem}.notification-text-new{color:#130044}ul.dropdown-menu{min-width:15rem;max-height:10rem;overflow-y:auto}li:active{color:#130044}hr.dropdown-divider{margin:auto;margin-top:.125rem;margin-bottom:.125rem}.home{position:absolute;left:-800px;top:-5px;height:25px;width:25px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.KeycloakService }, { type: i2.TranslateService }, { type: i3.AuthService }, { type: i4.WebSocketService }, { type: i5.UserService }, { type: i6.NotificationService }, { type: undefined, decorators: [{
                    type: Inject,
                    args: ['SHARED_CONFIG']
                }] }]; }, propDecorators: { properties: [{
                type: Input
            }], showNotifications: [{
                type: Input
            }], iconLogo: [{
                type: Input
            }], bigLogo: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,