import { Component, Inject, Input } from '@angular/core';
import { faCube } from '@fortawesome/free-solid-svg-icons';
import { DatePipe } from '@angular/common';
import * as i0 from "@angular/core";
import * as i1 from "keycloak-angular";
import * as i2 from "@ngx-translate/core";
import * as i3 from "../services/auth/auth.service";
import * as i4 from "../services/websocket/websocket.service";
import * as i5 from "../services/user/user.service";
import * as i6 from "../services/notification/notification.service";
import * as i7 from "@angular/common";
import * as i8 from "@ng-bootstrap/ng-bootstrap";
import * as i9 from "@angular/router";
export class HeaderComponent {
    constructor(keycloak, translateService, auth, webSocket, userService, notificationService, config) {
        this.keycloak = keycloak;
        this.translateService = translateService;
        this.auth = auth;
        this.webSocket = webSocket;
        this.userService = userService;
        this.notificationService = notificationService;
        this.config = config;
        this.showNotifications = false;
        this.imgSrc = 'assets/images/profile.jpg';
        this.icon = faCube;
        this.languages = [];
        this.isNavbarCollapsed = true;
        this.listNotifications = [];
        this.notificationsCount = 0;
        this.totalUnredMessagesCount = 0;
        this.stati = [
            {
                name: 'online',
                iconPath: 'assets/images/ONLINE.png',
            },
            {
                name: 'busy',
                iconPath: 'assets/images/BUSY.png',
            },
            {
                name: 'invisible',
                iconPath: 'assets/images/INVISIBLE.png',
            },
        ];
        console.log('HeaderComponent costruttore chiamato');
        this.keycloakLoginOptions = {
            redirectUri: this.config.loginRedirectChatHomePage,
        };
        this.languages = [
            {
                name: 'English',
                langIdentifier: 'en-EN',
                flagPath: '../../assets/images/en-EN.png',
            },
            {
                name: 'Italiano',
                langIdentifier: 'it-IT',
                flagPath: '../../assets/images/it-IT.png',
            },
            {
                name: 'Français',
                langIdentifier: 'fr-FR',
                flagPath: '../../assets/images/fr-FR.png',
            }
        ].sort();
    }
    ngOnInit() {
        this.keycloak.isLoggedIn().then(isLoggedIn => {
            if (isLoggedIn) {
                this.keycloak.loadUserProfile().then(profile => {
                    this.auth.updateKeycloakProfile(profile);
                    if (this.showNotifications) {
                        this.initializeNotifications();
                    }
                });
            }
        });
        this.auth.userDTOBehaviorSubject.subscribe({
            next: (receivedUserDTO) => {
                if (receivedUserDTO) {
                    this.userDTO = receivedUserDTO;
                    if (receivedUserDTO.propertiesDTO?.defaultLanguage) {
                        this.translateService.use(receivedUserDTO.propertiesDTO.defaultLanguage);
                    }
                }
            }
        });
        if (this.showNotifications) {
            this.webSocketSubscription = this.webSocket.newNotification.subscribe({
                next: (ping) => {
                    if (ping) {
                        this.updateNotifications();
                    }
                }
            });
        }
    }
    ngOnDestroy() {
        if (this.webSocketSubscription) {
            this.webSocketSubscription.unsubscribe();
        }
        if (this.timer) {
            clearTimeout(this.timer);
        }
    }
    initializeNotifications() {
        if (!this.showNotifications)
            return;
        this.notificationService.getNotifications().subscribe(notifications => {
            this.listNotifications = notifications;
            ;
            if (notifications.some(notification => notification.app == this.config.appIdentifier)) {
                this.notificationService.getTotalUnreadNotificationCount().subscribe(count => {
                    this.totalUnredMessagesCount = count;
                    this.setNotification();
                });
            }
        });
    }
    setNotification() {
        if (!this.showNotifications)
            return;
        this.transformDateNotification();
        this.countNotifications();
    }
    transformDateNotification() {
        const datePipe = new DatePipe('en-US');
        this.listNotifications.forEach((notification) => notification.sentAt = datePipe.transform(notification.sentAt, 'dd/MM/yyyy - HH:mm:ss'));
    }
    countNotifications() {
        this.notificationsCount = 0;
        this.listNotifications.forEach((notification) => {
            if (!notification.read && ((notification.app != this.config.appIdentifier) || (notification.app == this.config.appIdentifier && this.totalUnredMessagesCount != 0))) {
                this.notificationsCount += 1;
            }
        });
    }
    readAllNotifications() {
        if (!this.showNotifications)
            return;
        this.notificationService.readAllNotifications().subscribe();
        this.listNotifications.forEach(notification => notification.read = true);
        this.countNotifications();
    }
    updateNotifications() {
        if (!this.showNotifications)
            return;
        this.notificationService.getNotifications().subscribe(notifications => {
            this.listNotifications = notifications;
            ;
            this.setNotification();
        });
    }
    readNotificationAfterMouseStand(event, id) {
        if (!this.showNotifications)
            return;
        this.timer = setTimeout(() => {
            event.target.classList.remove('notification-text-new');
            this.notificationService.readOneNotification(id).subscribe();
            this.listNotifications.forEach((notification) => {
                if (notification.id == id) {
                    notification.read = true;
                }
            });
            this.countNotifications();
        }, 1000);
    }
    abortReadNotificationAfterMouseStand() {
        if (!this.showNotifications)
            return;
        clearTimeout(this.timer);
    }
    redirect(notification) {
        if (!this.showNotifications)
            return;
        if (notification.app == this.config.appIdentifier && this.properties?.chatUrl) {
            window.location.href = this.properties.chatUrl;
        }
    }
    login() {
        this.keycloak.login(this.keycloakLoginOptions);
    }
    logout() {
        this.webSocket.disconnect().then(() => {
            this.keycloak.logout(this.config.redirectUri);
        });
    }
    changeLanguage(lang) {
        this.translateService.use(lang);
    }
    updateStatus(status) {
        this.userService.updateStatus(status).subscribe({
            next: (response) => {
                if (response && this.userDTO) {
                    this.userDTO.propertiesDTO.status = status;
                    this.auth.userDTOBehaviorSubject.next(this.userDTO);
                }
            },
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: HeaderComponent, deps: [{ token: i1.KeycloakService }, { token: i2.TranslateService }, { token: i3.AuthService }, { token: i4.WebSocketService }, { token: i5.UserService }, { token: i6.NotificationService }, { token: 'SHARED_CONFIG' }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: HeaderComponent, selector: "cube-header", inputs: { properties: "properties", showNotifications: "showNotifications" }, ngImport: i0, template: "<nav class=\"navbar navbar-expand-xl\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"navbar-brand\">\r\n            <img alt=\"cube portal logo\" routerLink=\"/\" style=\"cursor:pointer; width: 275px; height: 50px;\"\r\n                src=\"../../assets/images/cube-portal-logo1.png\">\r\n        </div>\r\n\r\n        <button class=\"navbar-toggler shadow-none\" (click)=\"isNavbarCollapsed = !isNavbarCollapsed\">\r\n            <span>\r\n                <img alt=\"navbar toggler\" src=\"../../assets/images/navbar-toggler.png\">\r\n            </span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse justify-content-end\" [ngbCollapse]=\"isNavbarCollapsed\">\r\n            <ul class=\"list-group list-group-horizontal align-items-center justify-content-center\">\r\n                <li *ngIf=\"isNavbarCollapsed\" class=\"list-group-item\">\r\n                    <div class=\"nav-link user-menu\">\r\n                        {{userDTO?.name}} {{userDTO?.surname}}\r\n                    </div>\r\n                </li>\r\n\r\n                <li *ngIf=\"userDTO\" ngbDropdown class=\"list-group-item\">\r\n                    <div ngbDropdown class=\"dropdown\">\r\n                        <button ngbDropdownToggle class=\"user-menu\">\r\n                            <img alt=\"user status\" src=\"../../assets/images/{{ userDTO!.propertiesDTO!.status }}.png\" />\r\n                        </button>\r\n                        <div ngbDropdownMenu>\r\n                            <button *ngFor=\"let status of stati\" class=\"btn\" ngbDropdownItem\r\n                                (click)=\"updateStatus(status.name)\">\r\n                                <img class=\"me-2\" alt=\"{{status.name}}\" src=\"{{ status.iconPath }}\" />\r\n                                {{\"generic.\" + status.name | translate}}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n\r\n                <li ngbDropdown class=\"list-group-item\">\r\n                    <button *ngIf=\"!userDTO\" class=\"user-menu\" (click)=\"login()\">{{'Login'}}</button>\r\n                    <div *ngIf=\"userDTO\">\r\n                        <button ngbDropdownToggle class=\"user-menu\">\r\n                            <img alt=\"profilePicture\" class=\"rounded-5\" src=\"{{userDTO.propertiesDTO?.profilePicture}}\"\r\n                                width=\"32\" height=\"32\">\r\n                        </button>\r\n                        <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                            <button ngbDropdownItem routerLink=\"/profile\">{{\"generic.profile\"|translate}}</button>\r\n                            <button ngbDropdownItem (click)=\"logout()\">{{'Logout'}}</button>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n\r\n                <li *ngIf=\"!showNotifications\" ngbDropdown [autoClose]=\"false\" class=\"list-group-item dropdown\">\r\n                    showfalse\r\n                </li>\r\n\r\n                <li *ngIf=\"showNotifications\" ngbDropdown [autoClose]=\"false\" class=\"list-group-item dropdown\">\r\n                    showtrue\r\n                </li>\r\n\r\n                <!-- Notifications Menu - Only shown when showNotifications is true -->\r\n                <li *ngIf=\"showNotifications\" ngbDropdown [autoClose]=\"false\"\r\n                    class=\"list-group-item dropdown\">\r\n                    <div>\r\n                        <button alt=\"notification toggle\" ngbDropdownToggle class=\"user-menu\">\r\n                            <img height=\"32px\" alt=\"notification toggle\" src=\"../../assets/images/bell.png\"\r\n                                (click)=\"updateNotifications()\">\r\n                            <span *ngIf=\"notificationsCount!=0\" class=\"badge\">{{notificationsCount}}</span>\r\n                        </button>\r\n                        <ul ngbDropdownMenu class=\"dropdown-menu dropdown-menu-end\">\r\n                            <li ngbDropdownItem class=\"\">\r\n                                <div class=\"row d-flex justify-content-between align-items-center\">\r\n                                    <div class=\"col-10\">\r\n                                        <button class=\"dropdown-item p-0\"\r\n                                            routerLink=\"/notifications\"><strong>{{\"generic.notification-word\"|translate}}</strong></button>\r\n                                    </div>\r\n                                    <div class=\"col-2\">\r\n                                        <img style=\"cursor:pointer\" height=\"16px\" alt=\"read all notification\"\r\n                                            src=\"../../assets/images/read-all.png\" (click)=\"readAllNotifications()\">\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li *ngFor=\"let notification of listNotifications\" ngbDropdownItem>\r\n                                <div class=\"row\">\r\n                                    <div [ngClass]=\"notification.read ? 'col-12' : 'col-10'\" class=\"col\">\r\n                                        <div *ngIf=\"!notification.read && ((notification.app!='Chat') || (notification.app=='Chat' && totalUnredMessagesCount!=0))\"\r\n                                            class=\"notification-text notification-text-new\"\r\n                                            (mouseenter)=\"readNotificationAfterMouseStand($event, notification.id)\"\r\n                                            (mouseleave)=\"abortReadNotificationAfterMouseStand()\"\r\n                                            (click)=\"redirect(notification)\"\r\n                                            [ngClass]=\"notification.app == 'Chat' ? 'clickable' : null\">\r\n                                            <h5 class=\"my-auto\">{{notification.sentAt}}:</h5>\r\n                                            <span *ngIf=\"notification.app == 'Chat'\">{{totalUnredMessagesCount}}</span>\r\n                                            {{notification.message | translate}}\r\n                                            <hr class=\"dropdown-divider\">\r\n                                        </div>\r\n                                        <div *ngIf=\"notification.read && ((notification.app!='Chat') || (notification.app=='Chat' && totalUnredMessagesCount!=0))\"\r\n                                            class=\"notification-text text-muted\" (click)=\"redirect(notification)\"\r\n                                            [ngClass]=\"notification.app == 'Chat' ? 'clickable' : null\">\r\n                                            <h5 class=\"my-auto\">{{notification.sentAt}}:</h5>\r\n                                            <span *ngIf=\"notification.app == 'Chat'\">{{totalUnredMessagesCount}}</span>\r\n                                            {{notification.message | translate}}\r\n                                            <hr class=\"dropdown-divider\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"!notification.read && ((notification.app!='Chat') || (notification.app=='Chat' && totalUnredMessagesCount!=0))\"\r\n                                        class=\"col-2\">\r\n                                        <img src=\"../../assets/images/envelope.png\" alt=\"envelope icon\">\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n\r\n                <li ngbDropdown class=\"list-group-item\">\r\n                    <button ngbDropdownToggle class=\"user-menu\">\r\n                        <img alt=\"language flag\" src='{{\"lang.flag-picture\"|translate}}'>\r\n                    </button>\r\n                    <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                        <button *ngFor=\"let language of languages\" ngbDropdownItem\r\n                            (click)=\"changeLanguage(language.langIdentifier)\">\r\n                            <img alt=\"language flag\" src='{{language.flagPath}}'>\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>", styles: ["div.container-fluid{background:#130044;box-shadow:0 10px 50px #13004440;border-radius:.625rem;margin:1.125rem 1.25rem 0rem;min-height:5.813rem;height:100px}.navbar-brand{position:relative;left:50%;transform:translate(-50%);display:block}li.list-group-item{background:transparent;border:none}.dropdown-menu{border-radius:.625rem;min-width:inherit;padding:.25rem}button:hover,li.dropdown-item{background-color:transparent}.user-menu{border:none;background:transparent;color:#fff;white-space:nowrap}img.rounded-5{object-fit:cover}.badge{background-color:#fff;color:#130044}.dropdown-notification-toggle{color:#130044}.notification-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;max-width:21rem}.notification-text-new{color:#130044}ul.dropdown-menu{min-width:15rem;max-height:10rem;overflow-y:auto}li:active{color:#130044}hr.dropdown-divider{margin:auto;margin-top:.125rem;margin-bottom:.125rem}.home{position:absolute;left:-800px;top:-5px;height:25px;width:25px}\n"], dependencies: [{ kind: "directive", type: i7.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i7.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i8.NgbCollapse, selector: "[ngbCollapse]", inputs: ["animation", "ngbCollapse", "horizontal"], outputs: ["ngbCollapseChange", "shown", "hidden"], exportAs: ["ngbCollapse"] }, { kind: "directive", type: i8.NgbDropdown, selector: "[ngbDropdown]", inputs: ["autoClose", "dropdownClass", "open", "placement", "popperOptions", "container", "display"], outputs: ["openChange"], exportAs: ["ngbDropdown"] }, { kind: "directive", type: i8.NgbDropdownToggle, selector: "[ngbDropdownToggle]" }, { kind: "directive", type: i8.NgbDropdownMenu, selector: "[ngbDropdownMenu]" }, { kind: "directive", type: i8.NgbDropdownItem, selector: "[ngbDropdownItem]", inputs: ["disabled"] }, { kind: "directive", type: i9.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "pipe", type: i2.TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: HeaderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cube-header', template: "<nav class=\"navbar navbar-expand-xl\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"navbar-brand\">\r\n            <img alt=\"cube portal logo\" routerLink=\"/\" style=\"cursor:pointer; width: 275px; height: 50px;\"\r\n                src=\"../../assets/images/cube-portal-logo1.png\">\r\n        </div>\r\n\r\n        <button class=\"navbar-toggler shadow-none\" (click)=\"isNavbarCollapsed = !isNavbarCollapsed\">\r\n            <span>\r\n                <img alt=\"navbar toggler\" src=\"../../assets/images/navbar-toggler.png\">\r\n            </span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse justify-content-end\" [ngbCollapse]=\"isNavbarCollapsed\">\r\n            <ul class=\"list-group list-group-horizontal align-items-center justify-content-center\">\r\n                <li *ngIf=\"isNavbarCollapsed\" class=\"list-group-item\">\r\n                    <div class=\"nav-link user-menu\">\r\n                        {{userDTO?.name}} {{userDTO?.surname}}\r\n                    </div>\r\n                </li>\r\n\r\n                <li *ngIf=\"userDTO\" ngbDropdown class=\"list-group-item\">\r\n                    <div ngbDropdown class=\"dropdown\">\r\n                        <button ngbDropdownToggle class=\"user-menu\">\r\n                            <img alt=\"user status\" src=\"../../assets/images/{{ userDTO!.propertiesDTO!.status }}.png\" />\r\n                        </button>\r\n                        <div ngbDropdownMenu>\r\n                            <button *ngFor=\"let status of stati\" class=\"btn\" ngbDropdownItem\r\n                                (click)=\"updateStatus(status.name)\">\r\n                                <img class=\"me-2\" alt=\"{{status.name}}\" src=\"{{ status.iconPath }}\" />\r\n                                {{\"generic.\" + status.name | translate}}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n\r\n                <li ngbDropdown class=\"list-group-item\">\r\n                    <button *ngIf=\"!userDTO\" class=\"user-menu\" (click)=\"login()\">{{'Login'}}</button>\r\n                    <div *ngIf=\"userDTO\">\r\n                        <button ngbDropdownToggle class=\"user-menu\">\r\n                            <img alt=\"profilePicture\" class=\"rounded-5\" src=\"{{userDTO.propertiesDTO?.profilePicture}}\"\r\n                                width=\"32\" height=\"32\">\r\n                        </button>\r\n                        <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                            <button ngbDropdownItem routerLink=\"/profile\">{{\"generic.profile\"|translate}}</button>\r\n                            <button ngbDropdownItem (click)=\"logout()\">{{'Logout'}}</button>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n\r\n                <li *ngIf=\"!showNotifications\" ngbDropdown [autoClose]=\"false\" class=\"list-group-item dropdown\">\r\n                    showfalse\r\n                </li>\r\n\r\n                <li *ngIf=\"showNotifications\" ngbDropdown [autoClose]=\"false\" class=\"list-group-item dropdown\">\r\n                    showtrue\r\n                </li>\r\n\r\n                <!-- Notifications Menu - Only shown when showNotifications is true -->\r\n                <li *ngIf=\"showNotifications\" ngbDropdown [autoClose]=\"false\"\r\n                    class=\"list-group-item dropdown\">\r\n                    <div>\r\n                        <button alt=\"notification toggle\" ngbDropdownToggle class=\"user-menu\">\r\n                            <img height=\"32px\" alt=\"notification toggle\" src=\"../../assets/images/bell.png\"\r\n                                (click)=\"updateNotifications()\">\r\n                            <span *ngIf=\"notificationsCount!=0\" class=\"badge\">{{notificationsCount}}</span>\r\n                        </button>\r\n                        <ul ngbDropdownMenu class=\"dropdown-menu dropdown-menu-end\">\r\n                            <li ngbDropdownItem class=\"\">\r\n                                <div class=\"row d-flex justify-content-between align-items-center\">\r\n                                    <div class=\"col-10\">\r\n                                        <button class=\"dropdown-item p-0\"\r\n                                            routerLink=\"/notifications\"><strong>{{\"generic.notification-word\"|translate}}</strong></button>\r\n                                    </div>\r\n                                    <div class=\"col-2\">\r\n                                        <img style=\"cursor:pointer\" height=\"16px\" alt=\"read all notification\"\r\n                                            src=\"../../assets/images/read-all.png\" (click)=\"readAllNotifications()\">\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li *ngFor=\"let notification of listNotifications\" ngbDropdownItem>\r\n                                <div class=\"row\">\r\n                                    <div [ngClass]=\"notification.read ? 'col-12' : 'col-10'\" class=\"col\">\r\n                                        <div *ngIf=\"!notification.read && ((notification.app!='Chat') || (notification.app=='Chat' && totalUnredMessagesCount!=0))\"\r\n                                            class=\"notification-text notification-text-new\"\r\n                                            (mouseenter)=\"readNotificationAfterMouseStand($event, notification.id)\"\r\n                                            (mouseleave)=\"abortReadNotificationAfterMouseStand()\"\r\n                                            (click)=\"redirect(notification)\"\r\n                                            [ngClass]=\"notification.app == 'Chat' ? 'clickable' : null\">\r\n                                            <h5 class=\"my-auto\">{{notification.sentAt}}:</h5>\r\n                                            <span *ngIf=\"notification.app == 'Chat'\">{{totalUnredMessagesCount}}</span>\r\n                                            {{notification.message | translate}}\r\n                                            <hr class=\"dropdown-divider\">\r\n                                        </div>\r\n                                        <div *ngIf=\"notification.read && ((notification.app!='Chat') || (notification.app=='Chat' && totalUnredMessagesCount!=0))\"\r\n                                            class=\"notification-text text-muted\" (click)=\"redirect(notification)\"\r\n                                            [ngClass]=\"notification.app == 'Chat' ? 'clickable' : null\">\r\n                                            <h5 class=\"my-auto\">{{notification.sentAt}}:</h5>\r\n                                            <span *ngIf=\"notification.app == 'Chat'\">{{totalUnredMessagesCount}}</span>\r\n                                            {{notification.message | translate}}\r\n                                            <hr class=\"dropdown-divider\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"!notification.read && ((notification.app!='Chat') || (notification.app=='Chat' && totalUnredMessagesCount!=0))\"\r\n                                        class=\"col-2\">\r\n                                        <img src=\"../../assets/images/envelope.png\" alt=\"envelope icon\">\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n\r\n                <li ngbDropdown class=\"list-group-item\">\r\n                    <button ngbDropdownToggle class=\"user-menu\">\r\n                        <img alt=\"language flag\" src='{{\"lang.flag-picture\"|translate}}'>\r\n                    </button>\r\n                    <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                        <button *ngFor=\"let language of languages\" ngbDropdownItem\r\n                            (click)=\"changeLanguage(language.langIdentifier)\">\r\n                            <img alt=\"language flag\" src='{{language.flagPath}}'>\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>", styles: ["div.container-fluid{background:#130044;box-shadow:0 10px 50px #13004440;border-radius:.625rem;margin:1.125rem 1.25rem 0rem;min-height:5.813rem;height:100px}.navbar-brand{position:relative;left:50%;transform:translate(-50%);display:block}li.list-group-item{background:transparent;border:none}.dropdown-menu{border-radius:.625rem;min-width:inherit;padding:.25rem}button:hover,li.dropdown-item{background-color:transparent}.user-menu{border:none;background:transparent;color:#fff;white-space:nowrap}img.rounded-5{object-fit:cover}.badge{background-color:#fff;color:#130044}.dropdown-notification-toggle{color:#130044}.notification-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;max-width:21rem}.notification-text-new{color:#130044}ul.dropdown-menu{min-width:15rem;max-height:10rem;overflow-y:auto}li:active{color:#130044}hr.dropdown-divider{margin:auto;margin-top:.125rem;margin-bottom:.125rem}.home{position:absolute;left:-800px;top:-5px;height:25px;width:25px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.KeycloakService }, { type: i2.TranslateService }, { type: i3.AuthService }, { type: i4.WebSocketService }, { type: i5.UserService }, { type: i6.NotificationService }, { type: undefined, decorators: [{
                    type: Inject,
                    args: ['SHARED_CONFIG']
                }] }]; }, propDecorators: { properties: [{
                type: Input
            }], showNotifications: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2N1YmUvc2hhcmVkL3NyYy9saWIvY29tcG9uZW50L2hlYWRlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jdWJlL3NoYXJlZC9zcmMvbGliL2NvbXBvbmVudC9oZWFkZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBUSxNQUFNLEVBQUMsS0FBSyxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBRXhFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQVMzRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7Ozs7Ozs7Ozs7O0FBUTNDLE1BQU0sT0FBTyxlQUFlO0lBZ0MxQixZQUNVLFFBQXlCLEVBQ3pCLGdCQUFrQyxFQUNsQyxJQUFpQixFQUNqQixTQUEyQixFQUMzQixXQUF3QixFQUN4QixtQkFBd0MsRUFDZixNQUFvQjtRQU43QyxhQUFRLEdBQVIsUUFBUSxDQUFpQjtRQUN6QixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQ2xDLFNBQUksR0FBSixJQUFJLENBQWE7UUFDakIsY0FBUyxHQUFULFNBQVMsQ0FBa0I7UUFDM0IsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFDeEIsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFxQjtRQUNmLFdBQU0sR0FBTixNQUFNLENBQWM7UUFyQzlDLHNCQUFpQixHQUFZLEtBQUssQ0FBQztRQUc1QyxXQUFNLEdBQVksMkJBQTJCLENBQUM7UUFDOUMsU0FBSSxHQUFHLE1BQU0sQ0FBQztRQUNkLGNBQVMsR0FBZSxFQUFFLENBQUM7UUFDM0Isc0JBQWlCLEdBQUcsSUFBSSxDQUFDO1FBR3pCLHNCQUFpQixHQUF5QixFQUFFLENBQUM7UUFDN0MsdUJBQWtCLEdBQVcs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QUMsSUFBWTtRQUN6QixJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRCxZQUFZLENBQUMsTUFBYztRQUN6QixJQUFJLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxTQUFTLENBQUM7WUFDOUMsSUFBSSxFQUFFLENBQUMsUUFBUSxFQUFFLEVBQUU7Z0JBQ2pCLElBQUksUUFBUSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7b0JBQzVCLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYyxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7b0JBQzVDLElBQUksQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztpQkFDckQ7WUFDSCxDQUFDO1NBQ0YsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzsrR0FwTlUsZUFBZSwwTUF1Q2hCLGVBQWU7bUdBdkNkLGVBQWUsaUlDbkI1QiwrM1FBZ0lNOzs0RkQ3R08sZUFBZTtrQkFMM0IsU0FBUzsrQkFDRSxhQUFhOzswQkEyQ3BCLE1BQU07MkJBQUMsZUFBZTs0Q0F0Q2hCLFVBQVU7c0JBQWxCLEtBQUs7Z0JBQ0csaUJBQWlCO3NCQUF6QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LE9uSW5pdCxJbmplY3QsSW5wdXQsT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQgeyBmYUN1YmUgfSBmcm9tICdAZm9ydGF3ZXNvbWUvZnJlZS1zb2xpZC1zdmctaWNvbnMnO1xuaW1wb3J0IHsgS2V5Y2xvYWtTZXJ2aWNlIH0gZnJvbSAna2V5Y2xvYWstYW5ndWxhcic7XG5pbXBvcnQgeyBLZXljbG9ha0xvZ2luT3B0aW9ucyB9IGZyb20gJ2tleWNsb2FrLWpzJztcbmltcG9ydCB7IFNoYXJlZENvbmZpZyB9IGZyb20gJy4uL3R5cGVzL3NoYXJlZC5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgQXV0aFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9hdXRoL2F1dGguc2VydmljZSc7XG5pbXBvcnQgeyBVc2VyU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL3VzZXIvdXNlci5zZXJ2aWNlJztcbmltcG9ydCB7IFdlYlNvY2tldFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy93ZWJzb2NrZXQvd2Vic29ja2V0LnNlcnZpY2UnO1xuaW1wb3J0IHsgTGFuZ3VhZ2UsU3RhdHVzLFVzZXJEVE8sTm90aWZpY2F0aW9uIGFzIEN1c3RvbU5vdGlmaWNhdGlvbiB9IGZyb20gJy4uL3R5cGVzL3R5cGVzJztcbmltcG9ydCB7IE5vdGlmaWNhdGlvblNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9ub3RpZmljYXRpb24vbm90aWZpY2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgRGF0ZVBpcGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2N1YmUtaGVhZGVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2hlYWRlci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2hlYWRlci5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIEhlYWRlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCxPbkRlc3Ryb3kge1xuICBASW5wdXQoKSBwcm9wZXJ0aWVzOiBhbnk7XG4gIEBJbnB1dCgpIHNob3dOb3RpZmljYXRpb25zOiBib29sZWFuID0gZmFsc2U7XG5cbiAgdXNlckRUTz86IFVzZXJEVE87XG4gIGltZ1NyYz86IHN0cmluZyA9ICdhc3NldHMvaW1hZ2VzL3Byb2ZpbGUuanBnJztcbiAgaWNvbiA9IGZhQ3ViZTtcbiAgbGFuZ3VhZ2VzOiBMYW5ndWFnZVtdID0gW107XG4gIGlzTmF2YmFyQ29sbGFwc2VkID0gdHJ1ZTtcbiAga2V5Y2xvYWtMb2dpbk9wdGlvbnM6IEtleWNsb2FrTG9naW5PcHRpb25zO1xuXG4gIGxpc3ROb3RpZmljYXRpb25zOiBDdXN0b21Ob3RpZmljYXRpb25bXSA9IFtdO1xuICBub3RpZmljYXRpb25zQ291bnQ6IG51bWJlciA9IDA7XG4gIHByaXZhdGUgdGltZXI6IGFueTtcbiAgdG90YWxVbnJlZE1lc3NhZ2VzQ291bnQ6IG51bWJlciA9IDA7XG4gIHByaXZhdGUgd2ViU29ja2V0U3Vic2NyaXB0aW9uPzogU3Vic2NyaXB0aW9uO1xuXG4gIHN0YXRpOiBTdGF0dXNbXSA9IFtcbiAgICB7XG4gICAgICBuYW1lOiAnb25saW5lJyxcbiAgICAgIGljb25QYXRoOiAnYXNzZXRzL2ltYWdlcy9PTkxJTkUucG5nJyxcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6ICdidXN5JyxcbiAgICAgIGljb25QYXRoOiAnYXNzZXRzL2ltYWdlcy9CVVNZLnBuZycsXG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiAnaW52aXNpYmxlJyxcbiAgICAgIGljb25QYXRoOiAnYXNzZXRzL2ltYWdlcy9JTlZJU0lCTEUucG5nJyxcbiAgICB9LFxuICBdO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUga2V5Y2xvYWs6IEtleWNsb2FrU2VydmljZSxcbiAgICBwcml2YXRlIHRyYW5zbGF0ZVNlcnZpY2U6IFRyYW5zbGF0ZVNlcnZpY2UsXG4gICAgcHJpdmF0ZSBhdXRoOiBBdXRoU2VydmljZSxcbiAgICBwcml2YXRlIHdlYlNvY2tldDogV2ViU29ja2V0U2VydmljZSxcbiAgICBwcml2YXRlIHVzZXJTZXJ2aWNlOiBVc2VyU2VydmljZSxcbiAgICBwcml2YXRlIG5vdGlmaWNhdGlvblNlcnZpY2U6IE5vdGlmaWNhdGlvblNlcnZpY2UsXG4gICAgQEluamVjdCgnU0hBUkVEX0NPTkZJRycpIHByaXZhdGUgY29uZmlnOiBTaGFyZWRDb25maWdcbiAgKSB7XG4gICAgY29uc29sZS5sb2coJ0hlYWRlckNvbXBvbmVudCBjb3N0cnV0dG9yZSBjaGlhbWF0bycpO1xuICAgIHRoaXMua2V5Y2xvYWtMb2dpbk9wdGlvbnMgPSB7XG4gICAgICByZWRpcmVjdFVyaTogdGhpcy5jb25maWcubG9naW5SZWRpcmVjdENoYXRIb21lUGFnZSxcbiAgICB9O1xuICAgIHRoaXMubGFuZ3VhZ2VzID0gW1xuICAgICAge1xuICAgICAgICBuYW1lOiAnRW5nbGlzaCcsXG4gICAgICAgIGxhbmdJZGVudGlmaWVyOiAnZW4tRU4nLFxuICAgICAgICBmbGFnUGF0aDogJy4uLy4uL2Fzc2V0cy9pbWFnZXMvZW4tRU4ucG5nJyxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICdJdGFsaWFubycsXG4gICAgICAgIGxhbmdJZGVudGlmaWVyOiAnaXQtSVQnLFxuICAgICAgICBmbGFnUGF0aDogJy4uLy4uL2Fzc2V0cy9pbWFnZXMvaXQtSVQucG5nJyxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICdGcmFuw6dhaXMnLFxuICAgICAgICBsYW5nSWRlbnRpZmllcjogJ2ZyLUZSJyxcbiAgICAgICAgZmxhZ1BhdGg6ICcuLi8uLi9hc3NldHMvaW1hZ2VzL2ZyLUZSLnBuZycsXG4gICAgICB9XG4gICAgXS5zb3J0KCk7XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmtleWNsb2FrLmlzTG9nZ2VkSW4oKS50aGVuKGlzTG9nZ2VkSW4gPT4ge1xuICAgICAgaWYgKGlzTG9nZ2VkSW4pIHtcbiAgICAgICAgdGhpcy5rZXljbG9hay5sb2FkVXNlclByb2ZpbGUoKS50aGVuKHByb2ZpbGUgPT4ge1xuICAgICAgICAgIHRoaXMuYXV0aC51cGRhdGVLZXljbG9ha1Byb2ZpbGUocHJvZmlsZSk7XG4gICAgICAgICAgaWYgKHRoaXMuc2hvd05vdGlmaWNhdGlvbnMpIHtcbiAgICAgICAgICAgIHRoaXMuaW5pdGlhbGl6ZU5vdGlmaWNhdGlvbnMoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdGhpcy5hdXRoLnVzZXJEVE9CZWhhdmlvclN1YmplY3Quc3Vic2NyaWJlKHtcbiAgICAgIG5leHQ6IChyZWNlaXZlZFVzZXJEVE8pID0+IHtcbiAgICAgICAgaWYgKHJlY2VpdmVkVXNlckRUTykge1xuICAgICAgICAgIHRoaXMudXNlckRUTyA9IHJlY2VpdmVkVXNlckRUTztcbiAgICAgICAgICBpZiAocmVjZWl2ZWRVc2VyRFRPLnByb3BlcnRpZXNEVE8/LmRlZmF1bHRMYW5ndWFnZSkge1xuICAgICAgICAgICAgdGhpcy50cmFuc2xhdGVTZXJ2aWNlLnVzZShyZWNlaXZlZFVzZXJEVE8ucHJvcGVydGllc0RUTy5kZWZhdWx0TGFuZ3VhZ2UpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgaWYgKHRoaXMuc2hvd05vdGlmaWNhdGlvbnMpIHtcbiAgICAgIHRoaXMud2ViU29ja2V0U3Vic2NyaXB0aW9uID0gdGhpcy53ZWJTb2NrZXQubmV3Tm90aWZpY2F0aW9uLnN1YnNjcmliZSh7XG4gICAgICAgIG5leHQ6IChwaW5nOiBib29sZWFuKSA9PiB7XG4gICAgICAgICAgaWYgKHBpbmcpIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlTm90aWZpY2F0aW9ucygpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgaWYgKHRoaXMud2ViU29ja2V0U3Vic2NyaXB0aW9uKSB7XG4gICAgICB0aGlzLndlYlNvY2tldFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgIH1cbiAgICBpZiAodGhpcy50aW1lcikge1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgaW5pdGlhbGl6ZU5vdGlmaWNhdGlvbnMoKTogdm9pZCB7XG4gICAgaWYgKCF0aGlzLnNob3dOb3RpZmljYXRpb25zKSByZXR1cm47XG4gICAgdGhpcy5ub3RpZmljYXRpb25TZXJ2aWNlLmdldE5vdGlmaWNhdGlvbnMoKS5zdWJzY3JpYmUoXG4gICAgICBub3RpZmljYXRpb25zID0+IHtcbiAgICAgICAgdGhpcy5saXN0Tm90aWZpY2F0aW9ucyA9IG5vdGlmaWNhdGlvbnMgYXMgQ3VzdG9tTm90aWZpY2F0aW9uW107O1xuICAgICAgICBpZiAobm90aWZpY2F0aW9ucy5zb21lKG5vdGlmaWNhdGlvbiA9PiBub3RpZmljYXRpb24uYXBwID09IHRoaXMuY29uZmlnLmFwcElkZW50aWZpZXIpKSB7XG4gICAgICAgICAgdGhpcy5ub3RpZmljYXRpb25TZXJ2aWNlLmdldFRvdGFsVW5yZWFkTm90aWZpY2F0aW9uQ291bnQoKS5zdWJzY3JpYmUoXG4gICAgICAgICAgICBjb3VudCA9PiB7XG4gICAgICAgICAgICAgIHRoaXMudG90YWxVbnJlZE1lc3NhZ2VzQ291bnQgPSBjb3VudDtcbiAgICAgICAgICAgICAgdGhpcy5zZXROb3RpZmljYXRpb24oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgKTtcbiAgfVxuXG4gIHNldE5vdGlmaWNhdGlvbigpIHtcbiAgICBpZiAoIXRoaXMuc2hvd05vdGlmaWNhdGlvbnMpIHJldHVybjtcbiAgICB0aGlzLnRyYW5zZm9ybURhdGVOb3RpZmljYXRpb24oKTtcbiAgICB0aGlzLmNvdW50Tm90aWZpY2F0aW9ucygpO1xuICB9XG5cbiAgdHJhbnNmb3JtRGF0ZU5vdGlmaWNhdGlvbigpIHtcbiAgICBjb25zdCBkYXRlUGlwZSA9IG5ldyBEYXRlUGlwZSgnZW4tVVMnKTtcbiAgICB0aGlzLmxpc3ROb3RpZmljYXRpb25zLmZvckVhY2goKG5vdGlmaWNhdGlvbjogQ3VzdG9tTm90aWZpY2F0aW9uKSA9PlxuICAgICAgbm90aWZpY2F0aW9uLnNlbnRBdCA9IGRhdGVQaXBlLnRyYW5zZm9ybShub3RpZmljYXRpb24uc2VudEF0LCdkZC9NTS95eXl5IC0gSEg6bW06c3MnKVxuICAgICk7XG4gIH1cblxuICBjb3VudE5vdGlmaWNhdGlvbnMoKSB7XG4gICAgdGhpcy5ub3RpZmljYXRpb25zQ291bnQgPSAwO1xuICAgIHRoaXMubGlzdE5vdGlmaWNhdGlvbnMuZm9yRWFjaCgobm90aWZpY2F0aW9uOiBDdXN0b21Ob3RpZmljYXRpb24pID0+IHtcbiAgICAgIGlmICghbm90aWZpY2F0aW9uLnJlYWQgJiYgKChub3RpZmljYXRpb24uYXBwICE9IHRoaXMuY29uZmlnLmFwcElkZW50aWZpZXIpIHx8IChub3RpZmljYXRpb24uYXBwID09IHRoaXMuY29uZmlnLmFwcElkZW50aWZpZXIgJiYgdGhpcy50b3RhbFVucmVkTWVzc2FnZXNDb3VudCAhPSAwKSkpIHtcbiAgICAgICAgdGhpcy5ub3RpZmljYXRpb25zQ291bnQgKz0gMTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHJlYWRBbGxOb3RpZmljYXRpb25zKCkge1xuICAgIGlmICghdGhpcy5zaG93Tm90aWZpY2F0aW9ucykgcmV0dXJuO1xuICAgIHRoaXMubm90aWZpY2F0aW9uU2VydmljZS5yZWFkQWxsTm90aWZpY2F0aW9ucygpLnN1YnNjcmliZSgpO1xuICAgIHRoaXMubGlzdE5vdGlmaWNhdGlvbnMuZm9yRWFjaChub3RpZmljYXRpb24gPT4gbm90aWZpY2F0aW9uLnJlYWQgPSB0cnVlKTtcbiAgICB0aGlzLmNvdW50Tm90aWZpY2F0aW9ucygpO1xuICB9XG5cbiAgdXBkYXRlTm90aWZpY2F0aW9ucygpIHtcbiAgICBpZiAoIXRoaXMuc2hvd05vdGlmaWNhdGlvbnMpIHJldHVybjtcbiAgICB0aGlzLm5vdGlmaWNhdGlvblNlcnZpY2UuZ2V0Tm90aWZpY2F0aW9ucygpLnN1YnNjcmliZShcbiAgICAgIG5vdGlmaWNhdGlvbnMgPT4ge1xuICAgICAgICB0aGlzLmxpc3ROb3RpZmljYXRpb25zID0gbm90aWZpY2F0aW9ucyBhcyBDdXN0b21Ob3RpZmljYXRpb25bXTs7XG4gICAgICAgIHRoaXMuc2V0Tm90aWZpY2F0aW9uKCk7XG4gICAgICB9XG4gICAgKTtcbiAgfVxuXG4gIHJlYWROb3RpZmljYXRpb25BZnRlck1vdXNlU3RhbmQoZXZlbnQ6IGFueSxpZDogbnVtYmVyKSB7XG4gICAgaWYgKCF0aGlzLnNob3dOb3RpZmljYXRpb25zKSByZXR1cm47XG4gICAgdGhpcy50aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoJ25vdGlmaWNhdGlvbi10ZXh0LW5ldycpO1xuICAgICAgdGhpcy5ub3RpZmljYXRpb25TZXJ2aWNlLnJlYWRPbmVOb3RpZmljYXRpb24oaWQpLnN1YnNjcmliZSgpO1xuICAgICAgdGhpcy5saXN0Tm90aWZpY2F0aW9ucy5mb3JFYWNoKChub3RpZmljYXRpb246IEN1c3RvbU5vdGlmaWNhdGlvbikgPT4ge1xuICAgICAgICBpZiAobm90aWZpY2F0aW9uLmlkID09IGlkKSB7XG4gICAgICAgICAgbm90aWZpY2F0aW9uLnJlYWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHRoaXMuY291bnROb3RpZmljYXRpb25zKCk7XG4gICAgfSwxMDAwKTtcbiAgfVxuXG4gIGFib3J0UmVhZE5vdGlmaWNhdGlvbkFmdGVyTW91c2VTdGFuZCgpIHtcbiAgICBpZiAoIXRoaXMuc2hvd05vdGlmaWNhdGlvbnMpIHJldHVybjtcbiAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lcik7XG4gIH1cblxuICByZWRpcmVjdChub3RpZmljYXRpb246IEN1c3RvbU5vdGlmaWNhdGlvbikge1xuICAgIGlmICghdGhpcy5zaG93Tm90aWZpY2F0aW9ucykgcmV0dXJuO1xuICAgIGlmIChub3RpZmljYXRpb24uYXBwID09IHRoaXMuY29uZmlnLmFwcElkZW50aWZpZXIgJiYgdGhpcy5wcm9wZXJ0aWVzPy5jaGF0VXJsKSB7XG4gICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHRoaXMucHJvcGVydGllcy5jaGF0VXJsO1xuICAgIH1cbiAgfVxuXG4gIGxvZ2luKCkge1xuICAgIHRoaXMua2V5Y2xvYWsubG9naW4odGhpcy5rZXljbG9ha0xvZ2luT3B0aW9ucyk7XG4gIH1cblxuICBsb2dvdXQoKTogdm9pZCB7XG4gICAgdGhpcy53ZWJTb2NrZXQuZGlzY29ubmVjdCgpLnRoZW4oKCkgPT4ge1xuICAgICAgdGhpcy5rZXljbG9hay5sb2dvdXQodGhpcy5jb25maWcucmVkaXJlY3RVcmkpO1xuICAgIH0pO1xuICB9XG5cbiAgY2hhbmdlTGFuZ3VhZ2UobGFuZzogc3RyaW5nKSB7XG4gICAgdGhpcy50cmFuc2xhdGVTZXJ2aWNlLnVzZShsYW5nKTtcbiAgfVxuXG4gIHVwZGF0ZVN0YXR1cyhzdGF0dXM6IHN0cmluZykge1xuICAgIHRoaXMudXNlclNlcnZpY2UudXBkYXRlU3RhdHVzKHN0YXR1cykuc3Vic2NyaWJlKHtcbiAgICAgIG5leHQ6IChyZXNwb25zZSkgPT4ge1xuICAgICAgICBpZiAocmVzcG9uc2UgJiYgdGhpcy51c2VyRFRPKSB7XG4gICAgICAgICAgdGhpcy51c2VyRFRPLnByb3BlcnRpZXNEVE8hLnN0YXR1cyA9IHN0YXR1cztcbiAgICAgICAgICB0aGlzLmF1dGgudXNlckRUT0JlaGF2aW9yU3ViamVjdC5uZXh0KHRoaXMudXNlckRUTyk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgfSk7XG4gIH1cbn0iLCI8bmF2IGNsYXNzPVwibmF2YmFyIG5hdmJhci1leHBhbmQteGxcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXItZmx1aWRcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwibmF2YmFyLWJyYW5kXCI+XHJcbiAgICAgICAgICAgIDxpbWcgYWx0PVwiY3ViZSBwb3J0YWwgbG9nb1wiIHJvdXRlckxpbms9XCIvXCIgc3R5bGU9XCJjdXJzb3I6cG9pbnRlcjsgd2lkdGg6IDI3NXB4OyBoZWlnaHQ6IDUwcHg7XCJcclxuICAgICAgICAgICAgICAgIHNyYz1cIi4uLy4uL2Fzc2V0cy9pbWFnZXMvY3ViZS1wb3J0YWwtbG9nbzEucG5nXCI+XHJcbiAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgIDxidXR0b24gY2xhc3M9XCJuYXZiYXItdG9nZ2xlciBzaGFkb3ctbm9uZVwiIChjbGljayk9XCJpc05hdmJhckNvbGxhcHNlZCA9ICFpc05hdmJhckNvbGxhcHNlZFwiPlxyXG4gICAgICAgICAgICA8c3Bhbj5cclxuICAgICAgICAgICAgICAgIDxpbWcgYWx0PVwibmF2YmFyIHRvZ2dsZXJcIiBzcmM9XCIuLi8uLi9hc3NldHMvaW1hZ2VzL25hdmJhci10b2dnbGVyLnBuZ1wiPlxyXG4gICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgPC9idXR0b24+XHJcblxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2xsYXBzZSBuYXZiYXItY29sbGFwc2UganVzdGlmeS1jb250ZW50LWVuZFwiIFtuZ2JDb2xsYXBzZV09XCJpc05hdmJhckNvbGxhcHNlZFwiPlxyXG4gICAgICAgICAgICA8dWwgY2xhc3M9XCJsaXN0LWdyb3VwIGxpc3QtZ3JvdXAtaG9yaXpvbnRhbCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgPGxpICpuZ0lmPVwiaXNOYXZiYXJDb2xsYXBzZWRcIiBjbGFzcz1cImxpc3QtZ3JvdXAtaXRlbVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYXYtbGluayB1c2VyLW1lbnVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAge3t1c2VyRFRPPy5uYW1lfX0ge3t1c2VyRFRPPy5zdXJuYW1lfX1cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvbGk+XHJcblxyXG4gICAgICAgICAgICAgICAgPGxpICpuZ0lmPVwidXNlckRUT1wiIG5nYkRyb3Bkb3duIGNsYXNzPVwibGlzdC1ncm91cC1pdGVtXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBuZ2JEcm9wZG93biBjbGFzcz1cImRyb3Bkb3duXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gbmdiRHJvcGRvd25Ub2dnbGUgY2xhc3M9XCJ1c2VyLW1lbnVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgYWx0PVwidXNlciBzdGF0dXNcIiBzcmM9XCIuLi8uLi9hc3NldHMvaW1hZ2VzL3t7IHVzZXJEVE8hLnByb3BlcnRpZXNEVE8hLnN0YXR1cyB9fS5wbmdcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBuZ2JEcm9wZG93bk1lbnU+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uICpuZ0Zvcj1cImxldCBzdGF0dXMgb2Ygc3RhdGlcIiBjbGFzcz1cImJ0blwiIG5nYkRyb3Bkb3duSXRlbVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjbGljayk9XCJ1cGRhdGVTdGF0dXMoc3RhdHVzLm5hbWUpXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz1cIm1lLTJcIiBhbHQ9XCJ7e3N0YXR1cy5uYW1lfX1cIiBzcmM9XCJ7eyBzdGF0dXMuaWNvblBhdGggfX1cIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7XCJnZW5lcmljLlwiICsgc3RhdHVzLm5hbWUgfCB0cmFuc2xhdGV9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9saT5cclxuXHJcbiAgICAgICAgICAgICAgICA8bGkgbmdiRHJvcGRvd24gY2xhc3M9XCJsaXN0LWdyb3VwLWl0ZW1cIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uICpuZ0lmPVwiIXVzZXJEVE9cIiBjbGFzcz1cInVzZXItbWVudVwiIChjbGljayk9XCJsb2dpbigpXCI+e3snTG9naW4nfX08L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2ICpuZ0lmPVwidXNlckRUT1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG5nYkRyb3Bkb3duVG9nZ2xlIGNsYXNzPVwidXNlci1tZW51XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGFsdD1cInByb2ZpbGVQaWN0dXJlXCIgY2xhc3M9XCJyb3VuZGVkLTVcIiBzcmM9XCJ7e3VzZXJEVE8ucHJvcGVydGllc0RUTz8ucHJvZmlsZVBpY3R1cmV9fVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9XCIzMlwiIGhlaWdodD1cIjMyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IG5nYkRyb3Bkb3duTWVudSBjbGFzcz1cImRyb3Bkb3duLW1lbnVcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gbmdiRHJvcGRvd25JdGVtIHJvdXRlckxpbms9XCIvcHJvZmlsZVwiPnt7XCJnZW5lcmljLnByb2ZpbGVcInx0cmFuc2xhdGV9fTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBuZ2JEcm9wZG93bkl0ZW0gKGNsaWNrKT1cImxvZ291dCgpXCI+e3snTG9nb3V0J319PC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9saT5cclxuXHJcbiAgICAgICAgICAgICAgICA8bGkgKm5nSWY9XCIhc2hvd05vdGlmaWNhdGlvbnNcIiBuZ2JEcm9wZG93biBbYXV0b0Nsb3NlXT1cImZhbHNlXCIgY2xhc3M9XCJsaXN0LWdyb3VwLWl0ZW0gZHJvcGRvd25cIj5cclxuICAgICAgICAgICAgICAgICAgICBzaG93ZmFsc2VcclxuICAgICAgICAgICAgICAgIDwvbGk+XHJcblxyXG4gICAgICAgICAgICAgICAgPGxpICpuZ0lmPVwic2hvd05vdGlmaWNhdGlvbnNcIiBuZ2JEcm9wZG93biBbYXV0b0Nsb3NlXT1cImZhbHNlXCIgY2xhc3M9XCJsaXN0LWdyb3VwLWl0ZW0gZHJvcGRvd25cIj5cclxuICAgICAgICAgICAgICAgICAgICBzaG93dHJ1ZVxyXG4gICAgICAgICAgICAgICAgPC9saT5cclxuXHJcbiAgICAgICAgICAgICAgICA8IS0tIE5vdGlmaWNhdGlvbnMgTWVudSAtIE9ubHkgc2hvd24gd2hlbiBzaG93Tm90aWZpY2F0aW9ucyBpcyB0cnVlIC0tPlxyXG4gICAgICAgICAgICAgICAgPGxpICpuZ0lmPVwic2hvd05vdGlmaWNhdGlvbnNcIiBuZ2JEcm9wZG93biBbYXV0b0Nsb3NlXT1cImZhbHNlXCJcclxuICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImxpc3QtZ3JvdXAtaXRlbSBkcm9wZG93blwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gYWx0PVwibm90aWZpY2F0aW9uIHRvZ2dsZVwiIG5nYkRyb3Bkb3duVG9nZ2xlIGNsYXNzPVwidXNlci1tZW51XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGhlaWdodD1cIjMycHhcIiBhbHQ9XCJub3RpZmljYXRpb24gdG9nZ2xlXCIgc3JjPVwiLi4vLi4vYXNzZXRzL2ltYWdlcy9iZWxsLnBuZ1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGNsaWNrKT1cInVwZGF0ZU5vdGlmaWNhdGlvbnMoKVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gKm5nSWY9XCJub3RpZmljYXRpb25zQ291bnQhPTBcIiBjbGFzcz1cImJhZGdlXCI+e3tub3RpZmljYXRpb25zQ291bnR9fTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBuZ2JEcm9wZG93bk1lbnUgY2xhc3M9XCJkcm9wZG93bi1tZW51IGRyb3Bkb3duLW1lbnUtZW5kXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgbmdiRHJvcGRvd25JdGVtIGNsYXNzPVwiXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdyBkLWZsZXgganVzdGlmeS1jb250ZW50LWJldHdlZW4gYWxpZ24taXRlbXMtY2VudGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtMTBcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJkcm9wZG93bi1pdGVtIHAtMFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm91dGVyTGluaz1cIi9ub3RpZmljYXRpb25zXCI+PHN0cm9uZz57e1wiZ2VuZXJpYy5ub3RpZmljYXRpb24td29yZFwifHRyYW5zbGF0ZX19PC9zdHJvbmc+PC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLTJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3R5bGU9XCJjdXJzb3I6cG9pbnRlclwiIGhlaWdodD1cIjE2cHhcIiBhbHQ9XCJyZWFkIGFsbCBub3RpZmljYXRpb25cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz1cIi4uLy4uL2Fzc2V0cy9pbWFnZXMvcmVhZC1hbGwucG5nXCIgKGNsaWNrKT1cInJlYWRBbGxOb3RpZmljYXRpb25zKClcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPlxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSAqbmdGb3I9XCJsZXQgbm90aWZpY2F0aW9uIG9mIGxpc3ROb3RpZmljYXRpb25zXCIgbmdiRHJvcGRvd25JdGVtPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBbbmdDbGFzc109XCJub3RpZmljYXRpb24ucmVhZCA/ICdjb2wtMTInIDogJ2NvbC0xMCdcIiBjbGFzcz1cImNvbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAqbmdJZj1cIiFub3RpZmljYXRpb24ucmVhZCAmJiAoKG5vdGlmaWNhdGlvbi5hcHAhPSdDaGF0JykgfHwgKG5vdGlmaWNhdGlvbi5hcHA9PSdDaGF0JyAmJiB0b3RhbFVucmVkTWVzc2FnZXNDb3VudCE9MCkpXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cIm5vdGlmaWNhdGlvbi10ZXh0IG5vdGlmaWNhdGlvbi10ZXh0LW5ld1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKG1vdXNlZW50ZXIpPVwicmVhZE5vdGlmaWNhdGlvbkFmdGVyTW91c2VTdGFuZCgkZXZlbnQsIG5vdGlmaWNhdGlvbi5pZClcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChtb3VzZWxlYXZlKT1cImFib3J0UmVhZE5vdGlmaWNhdGlvbkFmdGVyTW91c2VTdGFuZCgpXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoY2xpY2spPVwicmVkaXJlY3Qobm90aWZpY2F0aW9uKVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW25nQ2xhc3NdPVwibm90aWZpY2F0aW9uLmFwcCA9PSAnQ2hhdCcgPyAnY2xpY2thYmxlJyA6IG51bGxcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9XCJteS1hdXRvXCI+e3tub3RpZmljYXRpb24uc2VudEF0fX06PC9oNT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiAqbmdJZj1cIm5vdGlmaWNhdGlvbi5hcHAgPT0gJ0NoYXQnXCI+e3t0b3RhbFVucmVkTWVzc2FnZXNDb3VudH19PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7bm90aWZpY2F0aW9uLm1lc3NhZ2UgfCB0cmFuc2xhdGV9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxociBjbGFzcz1cImRyb3Bkb3duLWRpdmlkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAqbmdJZj1cIm5vdGlmaWNhdGlvbi5yZWFkICYmICgobm90aWZpY2F0aW9uLmFwcCE9J0NoYXQnKSB8fCAobm90aWZpY2F0aW9uLmFwcD09J0NoYXQnICYmIHRvdGFsVW5yZWRNZXNzYWdlc0NvdW50IT0wKSlcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwibm90aWZpY2F0aW9uLXRleHQgdGV4dC1tdXRlZFwiIChjbGljayk9XCJyZWRpcmVjdChub3RpZmljYXRpb24pXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbbmdDbGFzc109XCJub3RpZmljYXRpb24uYXBwID09ICdDaGF0JyA/ICdjbGlja2FibGUnIDogbnVsbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz1cIm15LWF1dG9cIj57e25vdGlmaWNhdGlvbi5zZW50QXR9fTo8L2g1PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuICpuZ0lmPVwibm90aWZpY2F0aW9uLmFwcCA9PSAnQ2hhdCdcIj57e3RvdGFsVW5yZWRNZXNzYWdlc0NvdW50fX08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3tub3RpZmljYXRpb24ubWVzc2FnZSB8IHRyYW5zbGF0ZX19XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyIGNsYXNzPVwiZHJvcGRvd24tZGl2aWRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICpuZ0lmPVwiIW5vdGlmaWNhdGlvbi5yZWFkICYmICgobm90aWZpY2F0aW9uLmFwcCE9J0NoYXQnKSB8fCAobm90aWZpY2F0aW9uLmFwcD09J0NoYXQnICYmIHRvdGFsVW5yZWRNZXNzYWdlc0NvdW50IT0wKSlcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJjb2wtMlwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCIuLi8uLi9hc3NldHMvaW1hZ2VzL2VudmVsb3BlLnBuZ1wiIGFsdD1cImVudmVsb3BlIGljb25cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9saT5cclxuXHJcbiAgICAgICAgICAgICAgICA8bGkgbmdiRHJvcGRvd24gY2xhc3M9XCJsaXN0LWdyb3VwLWl0ZW1cIj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG5nYkRyb3Bkb3duVG9nZ2xlIGNsYXNzPVwidXNlci1tZW51XCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgYWx0PVwibGFuZ3VhZ2UgZmxhZ1wiIHNyYz0ne3tcImxhbmcuZmxhZy1waWN0dXJlXCJ8dHJhbnNsYXRlfX0nPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgbmdiRHJvcGRvd25NZW51IGNsYXNzPVwiZHJvcGRvd24tbWVudVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uICpuZ0Zvcj1cImxldCBsYW5ndWFnZSBvZiBsYW5ndWFnZXNcIiBuZ2JEcm9wZG93bkl0ZW1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjbGljayk9XCJjaGFuZ2VMYW5ndWFnZShsYW5ndWFnZS5sYW5nSWRlbnRpZmllcilcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgYWx0PVwibGFuZ3VhZ2UgZmxhZ1wiIHNyYz0ne3tsYW5ndWFnZS5mbGFnUGF0aH19Jz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbjwvbmF2PiJdfQ==