{"version":3,"file":"cube-shared.mjs","sources":["../../../../projects/cube/shared/src/lib/types/user.constants.ts","../../../../projects/cube/shared/src/lib/services/user/user.service.ts","../../../../projects/cube/shared/src/lib/services/auth/auth.service.ts","../../../../projects/cube/shared/src/lib/types/websocket.constants.ts","../../../../projects/cube/shared/src/lib/services/websocket/websocket.service.ts","../../../../projects/cube/shared/src/lib/services/notification/notification.service.ts","../../../../projects/cube/shared/src/lib/component/header.component.ts","../../../../projects/cube/shared/src/lib/component/header.component.html","../../../../projects/cube/shared/src/lib/header.module.ts","../../../../projects/cube/shared/src/public-api.ts","../../../../projects/cube/shared/src/cube-shared.ts"],"sourcesContent":["export const USER_ENDPOINTS = {\r\n    SAVE: '/user',\r\n    GET_USER: '/user',       // /{userId} verrà aggiunto dinamicamente\r\n    GET_FILTERED: '/user/all', // /{filterKey}/{page} verrà aggiunto dinamicamente\r\n    UPDATE_PICTURE: '/properties/picture',\r\n    UPDATE_ITEMS_PER_PAGE: '/properties/itemPerPage',\r\n    UPDATE_LANGUAGE: '/properties/language',\r\n    UPDATE_STATUS: '/properties/status',\r\n    GET_PERMISSIONS: '/permission' // /{userId} verrà aggiunto dinamicamente\r\n} as const;","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable,Inject } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PermissionDto,PaginatedUsersDTO,UserDTO } from '../../types/types';\r\nimport { SharedConfig } from '../../types/shared.interface';\r\nimport { USER_ENDPOINTS } from '../../types/user.constants';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n    constructor(\r\n        private http: HttpClient,\r\n        @Inject('SHARED_CONFIG') private config: SharedConfig\r\n    ) { }\r\n\r\n    private getPortalUrl(endpoint: string): string {\r\n        return `${this.config.baseUrl}${this.config.separator}${this.config.basePortPortal}${endpoint}`;\r\n    }\r\n\r\n    private getBaseUrl(endpoint: string): string {\r\n        return `${this.config.baseUrl}${this.config.separator}${this.config.basePort}${endpoint}`;\r\n    }\r\n\r\n    save(): Observable<void> {\r\n        return this.http.post<void>(this.getPortalUrl(USER_ENDPOINTS.SAVE),{});\r\n    }\r\n\r\n    getUser(userId: string): Observable<UserDTO> {\r\n        return this.http.get<UserDTO>(`${this.getPortalUrl(USER_ENDPOINTS.GET_USER)}/${userId}`);\r\n    }\r\n\r\n    getUserListFiltered(filterKey: string,page: number,excludeIdChat?: string): Observable<PaginatedUsersDTO> {\r\n        return this.http.get<PaginatedUsersDTO>(\r\n            `${this.getPortalUrl(USER_ENDPOINTS.GET_FILTERED)}/${filterKey}/${page}`\r\n        );\r\n    }\r\n\r\n    updateProfilePic(picture: string | ArrayBuffer | null): Observable<boolean> {\r\n        return this.http.put<boolean>(\r\n            this.getPortalUrl(USER_ENDPOINTS.UPDATE_PICTURE),\r\n            picture\r\n        );\r\n    }\r\n\r\n    updateItemPerPage(itemPerPage: string): Observable<boolean> {\r\n        return this.http.put<boolean>(\r\n            this.getPortalUrl(USER_ENDPOINTS.UPDATE_ITEMS_PER_PAGE),\r\n            itemPerPage\r\n        );\r\n    }\r\n\r\n    updateLanguage(lang: string): Observable<boolean> {\r\n        return this.http.put<boolean>(\r\n            this.getPortalUrl(USER_ENDPOINTS.UPDATE_LANGUAGE),\r\n            lang\r\n        );\r\n    }\r\n\r\n    updateStatus(status: string): Observable<boolean> {\r\n        return this.http.put<boolean>(\r\n            this.getPortalUrl(USER_ENDPOINTS.UPDATE_STATUS),\r\n            status\r\n        );\r\n    }\r\n\r\n    getUserPermissions(userId: string): Observable<PermissionDto[]> {\r\n        return this.http.get<PermissionDto[]>(\r\n            `${this.getBaseUrl(USER_ENDPOINTS.GET_PERMISSIONS)}/${userId}`\r\n        );\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable,Inject } from '@angular/core';\r\nimport { KeycloakProfile } from 'keycloak-js';\r\nimport { BehaviorSubject,catchError,filter,of,switchMap } from 'rxjs';\r\nimport { UserDTO } from '../../types/types';\r\nimport { UserService } from '../user/user.service';\r\nimport { SharedConfig } from '../../types/shared.interface';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n    // Proprietà per le informazioni utente\r\n    userKeycloak?: KeycloakProfile;\r\n    userDTO?: UserDTO;\r\n\r\n    // BehaviorSubjects per lo stato dell'utente\r\n    userDTOBehaviorSubject = new BehaviorSubject<UserDTO | undefined>(undefined);\r\n    userKeycloakBehaviorSubject = new BehaviorSubject<KeycloakProfile | undefined>(undefined);\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private userService: UserService,\r\n        @Inject('SHARED_CONFIG') private config: SharedConfig\r\n    ) {\r\n        this.userKeycloakBehaviorSubject.pipe(\r\n            filter(userKeycloak => !!userKeycloak?.id),\r\n            switchMap(userKeycloak => userService.save().pipe(\r\n                catchError(() => of(null)),\r\n                switchMap(() => userService.getUser(userKeycloak!.id!))\r\n            ))\r\n        ).subscribe({\r\n            next: userDTO => {\r\n                if (userDTO) {\r\n                    this.userDTO = userDTO;\r\n                    this.userDTOBehaviorSubject.next(userDTO);\r\n                }\r\n            },\r\n            error: () => this.reset()\r\n        });\r\n    }\r\n\r\n    // Metodo per aggiornare il profilo Keycloak\r\n    updateKeycloakProfile(profile: KeycloakProfile): void {\r\n        this.userKeycloak = profile;\r\n        this.userKeycloakBehaviorSubject.next(profile);\r\n    }\r\n\r\n    // Metodo per ottenere l'utente corrente\r\n    getCurrentUser(): UserDTO | undefined {\r\n        return this.userDTO;\r\n    }\r\n\r\n    // Metodo per resettare lo stato\r\n    reset(): void {\r\n        this.userKeycloak = undefined;\r\n        this.userDTO = undefined;\r\n        this.userDTOBehaviorSubject.next(undefined);\r\n        this.userKeycloakBehaviorSubject.next(undefined);\r\n    }\r\n}","export const WEBSOCKET_ENDPOINTS = {\r\n    // Endpoint base per la connessione WebSocket\r\n    BASE_ENDPOINT: '/cube-chat-web-socket',\r\n\r\n    // Endpoint per invio messaggi\r\n    REGISTER: '/register',\r\n    DISCONNECT: '/disconnect',\r\n    SEND_TO_ONE: '/send-to-one',\r\n    SEND_TO_GROUP: '/send-to-group',\r\n    READ_MESSAGE: '/readMessage',\r\n    AM_I_WRITING: '/am-i-writing',\r\n\r\n    // Endpoint per sottoscrizioni\r\n    PRIVATE_SUBSCRIPTION: '/private',\r\n    STATUS_SUBSCRIPTION: '/status',\r\n    IS_WRITING_SUBSCRIPTION: '/is-writing',\r\n    CHECK_SUBSCRIPTION: '/check',\r\n    NOTIFICATION_SUBSCRIPTION: '/notification'\r\n} as const;","import { Injectable,OnDestroy,Inject } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { KeycloakService } from 'keycloak-angular';\r\nimport { KeycloakProfile } from 'keycloak-js';\r\nimport { IsWritingDto,MessageTriggerDTO,propertiesDTO } from '../../types/types';\r\nimport * as Stomp from 'stompjs';\r\nimport * as SockJs from 'sockjs-client';\r\nimport { BehaviorSubject,Subject } from 'rxjs';\r\nimport { SharedConfig } from '../../types/shared.interface';\r\nimport { WEBSOCKET_ENDPOINTS } from '../../types/websocket.constants';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebSocketService implements OnDestroy {\r\n    stompClient?: Stomp.Client;\r\n    private subscriptions: { key: string,sub: Stomp.Subscription }[] = [];\r\n    isConnected = false;\r\n    userData?: KeycloakProfile;\r\n\r\n    private writingUsers: { [idChat: string]: string[] } = {};\r\n\r\n    newChatMessage: Subject<string | undefined> = new Subject<string | undefined>();\r\n    newStatus: Subject<propertiesDTO | undefined> = new Subject<propertiesDTO | undefined>();\r\n    othersWriting: BehaviorSubject<{ [idChat: string]: string[] }> = new BehaviorSubject<{ [idChat: string]: string[] }>({});\r\n    newNotification: Subject<boolean> = new Subject<boolean>();\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private keycloak: KeycloakService,\r\n        @Inject('SHARED_CONFIG') private config: SharedConfig\r\n    ) { }\r\n\r\n    private getWebSocketUrl(): string {\r\n        return `${this.config.baseUrl}${this.config.separator}${this.config.basePort}${WEBSOCKET_ENDPOINTS.BASE_ENDPOINT}`;\r\n    }\r\n\r\n    connect(): void {\r\n        this.stompClient = Stomp.over(new SockJs(this.getWebSocketUrl()));\r\n        this.stompClient.connect({},() => {\r\n            console.warn(\"CONNESSO A WEB SOCKET\");\r\n            this.authService.userKeycloakBehaviorSubject.subscribe({\r\n                next: (user) => this.userData = user\r\n            });\r\n            this.isConnected = true;\r\n            this.registerUser();\r\n            this.privateSubscription();\r\n            this.statusSubscription();\r\n            this.writingSubscription();\r\n            this.notificationSubscription();\r\n        });\r\n    }\r\n\r\n    async disconnect(): Promise<void> {\r\n        this.disconnectUser();\r\n        await this.stompClient?.disconnect(() => {\r\n            this.subscriptions.forEach((sub) => sub.sub.unsubscribe());\r\n        });\r\n        this.isConnected = false;\r\n    }\r\n\r\n    registerUser() {\r\n        this.stompClient?.send(\r\n            `${WEBSOCKET_ENDPOINTS.REGISTER}.${this.keycloak.getKeycloakInstance().subject}`\r\n        );\r\n    }\r\n\r\n    disconnectUser() {\r\n        this.stompClient?.send(WEBSOCKET_ENDPOINTS.DISCONNECT);\r\n    }\r\n\r\n    sendToOne(trigger: MessageTriggerDTO) {\r\n        this.stompClient?.send(WEBSOCKET_ENDPOINTS.SEND_TO_ONE,{},JSON.stringify(trigger));\r\n    }\r\n\r\n    amIWriting(idchat: number,isWriting: boolean): void {\r\n        this.stompClient?.send(`${WEBSOCKET_ENDPOINTS.AM_I_WRITING}.${idchat}.${isWriting}`);\r\n    }\r\n\r\n    sendToGroup(trigger: MessageTriggerDTO) {\r\n        this.stompClient?.send(WEBSOCKET_ENDPOINTS.SEND_TO_GROUP,{},JSON.stringify(trigger));\r\n    }\r\n\r\n    readMessage(id: number) {\r\n        this.stompClient?.send(`${WEBSOCKET_ENDPOINTS.READ_MESSAGE}.${id}`);\r\n    }\r\n\r\n    privateSubscription() {\r\n        this.onSubscription(\r\n            \"Private\",\r\n            this.stompClient!.subscribe(\r\n                `${WEBSOCKET_ENDPOINTS.PRIVATE_SUBSCRIPTION}.${this.keycloak.getKeycloakInstance().subject}`,\r\n                (message) => {\r\n                    this.newChatMessage.next(message.body);\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    statusSubscription() {\r\n        this.onSubscription(\r\n            \"Status\",\r\n            this.stompClient!.subscribe(\r\n                `${WEBSOCKET_ENDPOINTS.STATUS_SUBSCRIPTION}.${this.keycloak.getKeycloakInstance().subject}`,\r\n                (newUserStatus) => {\r\n                    this.newStatus.next(JSON.parse(newUserStatus.body));\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    notificationSubscription() {\r\n        this.onSubscription(\r\n            \"Notification\",\r\n            this.stompClient!.subscribe(\r\n                `${WEBSOCKET_ENDPOINTS.NOTIFICATION_SUBSCRIPTION}.${this.keycloak.getKeycloakInstance().subject}`,\r\n                () => {\r\n                    this.newNotification.next(true);\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    writingSubscription() {\r\n        this.onSubscription(\r\n            \"Writing\",\r\n            this.stompClient!.subscribe(\r\n                `${WEBSOCKET_ENDPOINTS.IS_WRITING_SUBSCRIPTION}.${this.keycloak.getKeycloakInstance().subject}`,\r\n                (writingDto) => {\r\n                    const w: IsWritingDto = JSON.parse(writingDto.body);\r\n\r\n                    if (w.isWriting && (!this.writingUsers[w.chatId] || !this.writingUsers[w.chatId].includes(w.userId))) {\r\n                        if (!this.writingUsers[w.chatId]) {\r\n                            this.writingUsers[w.chatId] = [];\r\n                        }\r\n                        this.writingUsers[w.chatId].push(w.userId);\r\n                    } else if (!w.isWriting && this.writingUsers[w.chatId] && this.writingUsers[w.chatId].includes(w.userId)) {\r\n                        this.writingUsers[w.chatId].splice(this.writingUsers[w.chatId].indexOf(w.userId),1);\r\n                        if (this.writingUsers[w.chatId].length == 0) {\r\n                            delete this.writingUsers[w.chatId];\r\n                        }\r\n                    }\r\n\r\n                    this.othersWriting.next(this.writingUsers);\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    onSubscription(key: string,sub: Stomp.Subscription) {\r\n        for (let i = 0; i < this.subscriptions.length; i++) {\r\n            if (this.subscriptions[i].key == key) {\r\n                this.subscriptions[i].sub.unsubscribe();\r\n                this.subscriptions.splice(i,1);\r\n            }\r\n        }\r\n        this.subscriptions.push({ key: key,sub: sub });\r\n    }\r\n\r\n    checkMessageSubscription(idChat: string,callBack: ((message: Stomp.Message) => any)) {\r\n        this.onSubscription(\r\n            \"Check\",\r\n            this.stompClient!.subscribe(\r\n                `${WEBSOCKET_ENDPOINTS.CHECK_SUBSCRIPTION}.${idChat}.${this.keycloak.getKeycloakInstance().subject}`,\r\n                callBack\r\n            )\r\n        );\r\n    }\r\n\r\n    checkmessageUnsubscribe() {\r\n        for (let i = 0; i < this.subscriptions.length; i++) {\r\n            if (this.subscriptions[i].key == 'Check') {\r\n                this.subscriptions[i].sub.unsubscribe();\r\n                this.subscriptions.splice(i,1);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.disconnect();\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Inject,Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PaginatedNotificationsDTO,Notification as CustomNotification } from '../../types/types';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n    constructor(\r\n        private http: HttpClient,\r\n        @Inject('BASE_URL') private baseUrl: string,\r\n        @Inject('BASE_PORT') private basePort: string,\r\n        @Inject('SEPARATOR') private separator: string\r\n    ) { }\r\n\r\n    getNotifications() {\r\n        return this.http.get<CustomNotification[]>(`${this.baseUrl}${this.separator}${this.basePort}/notification`);\r\n    }\r\n\r\n    getPaginatedNotifications(filterKeys: string[],page: number): Observable<PaginatedNotificationsDTO> {\r\n        return this.http.post<PaginatedNotificationsDTO>(\r\n            `${this.baseUrl}${this.separator}${this.basePort}/notification/all/filter`,\r\n            { filterKeys,page }\r\n        );\r\n    }\r\n\r\n    readAllNotifications(): Observable<void> {\r\n        return this.http.put<void>(`${this.baseUrl}${this.separator}${this.basePort}/notification`,{});\r\n    }\r\n\r\n    readOneNotification(id: number): Observable<void> {\r\n        return this.http.put<void>(`${this.baseUrl}${this.separator}${this.basePort}/notification/${id}`,{});\r\n    }\r\n\r\n    getTotalUnreadNotificationCount(): Observable<number> {\r\n        return this.http.get<number>(`${this.baseUrl}${this.separator}${this.basePort}/notification/unread-message-count`);\r\n    }\r\n}","import { Component,OnInit,Inject,Input,OnDestroy } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { faCube } from '@fortawesome/free-solid-svg-icons';\nimport { KeycloakService } from 'keycloak-angular';\nimport { KeycloakLoginOptions } from 'keycloak-js';\nimport { SharedConfig } from '../types/shared.interface';\nimport { AuthService } from '../services/auth/auth.service';\nimport { UserService } from '../services/user/user.service';\nimport { WebSocketService } from '../services/websocket/websocket.service';\nimport { Language,Status,UserDTO,Notification as CustomNotification } from '../types/types';\nimport { NotificationService } from '../services/notification/notification.service';\nimport { DatePipe } from '@angular/common';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cube-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit,OnDestroy {\n  @Input() properties: any;\n  @Input() showNotifications: boolean = false;\n\n  userDTO?: UserDTO;\n  imgSrc?: string = 'assets/images/profile.jpg';\n  icon = faCube;\n  languages: Language[] = [];\n  isNavbarCollapsed = true;\n  keycloakLoginOptions: KeycloakLoginOptions;\n\n  listNotifications: CustomNotification[] = [];\n  notificationsCount: number = 0;\n  private timer: any;\n  totalUnredMessagesCount: number = 0;\n  private webSocketSubscription?: Subscription;\n\n  stati: Status[] = [\n    {\n      name: 'online',\n      iconPath: 'assets/images/ONLINE.png',\n    },\n    {\n      name: 'busy',\n      iconPath: 'assets/images/BUSY.png',\n    },\n    {\n      name: 'invisible',\n      iconPath: 'assets/images/INVISIBLE.png',\n    },\n  ];\n\n  constructor(\n    private keycloak: KeycloakService,\n    private translateService: TranslateService,\n    private auth: AuthService,\n    private webSocket: WebSocketService,\n    private userService: UserService,\n    private notificationService: NotificationService,\n    @Inject('SHARED_CONFIG') private config: SharedConfig\n  ) {\n    console.log('HeaderComponent costruttore chiamato');\n    this.keycloakLoginOptions = {\n      redirectUri: this.config.loginRedirectChatHomePage,\n    };\n    this.languages = [\n      {\n        name: 'English',\n        langIdentifier: 'en-EN',\n        flagPath: '../../assets/images/en-EN.png',\n      },\n      {\n        name: 'Italiano',\n        langIdentifier: 'it-IT',\n        flagPath: '../../assets/images/it-IT.png',\n      },\n      {\n        name: 'Français',\n        langIdentifier: 'fr-FR',\n        flagPath: '../../assets/images/fr-FR.png',\n      }\n    ].sort();\n  }\n\n  ngOnInit(): void {\n    this.keycloak.isLoggedIn().then(isLoggedIn => {\n      if (isLoggedIn) {\n        this.keycloak.loadUserProfile().then(profile => {\n          this.auth.updateKeycloakProfile(profile);\n          if (this.showNotifications) {\n            this.initializeNotifications();\n          }\n        });\n      }\n    });\n\n    this.auth.userDTOBehaviorSubject.subscribe({\n      next: (receivedUserDTO) => {\n        if (receivedUserDTO) {\n          this.userDTO = receivedUserDTO;\n          if (receivedUserDTO.propertiesDTO?.defaultLanguage) {\n            this.translateService.use(receivedUserDTO.propertiesDTO.defaultLanguage);\n          }\n        }\n      }\n    });\n\n    if (this.showNotifications) {\n      this.webSocketSubscription = this.webSocket.newNotification.subscribe({\n        next: (ping: boolean) => {\n          if (ping) {\n            this.updateNotifications();\n          }\n        }\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.webSocketSubscription) {\n      this.webSocketSubscription.unsubscribe();\n    }\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n  }\n\n  private initializeNotifications(): void {\n    if (!this.showNotifications) return;\n    this.notificationService.getNotifications().subscribe(\n      notifications => {\n        this.listNotifications = notifications as CustomNotification[];;\n        if (notifications.some(notification => notification.app == this.config.appIdentifier)) {\n          this.notificationService.getTotalUnreadNotificationCount().subscribe(\n            count => {\n              this.totalUnredMessagesCount = count;\n              this.setNotification();\n            }\n          );\n        }\n      }\n    );\n  }\n\n  setNotification() {\n    if (!this.showNotifications) return;\n    this.transformDateNotification();\n    this.countNotifications();\n  }\n\n  transformDateNotification() {\n    const datePipe = new DatePipe('en-US');\n    this.listNotifications.forEach((notification: CustomNotification) =>\n      notification.sentAt = datePipe.transform(notification.sentAt,'dd/MM/yyyy - HH:mm:ss')\n    );\n  }\n\n  countNotifications() {\n    this.notificationsCount = 0;\n    this.listNotifications.forEach((notification: CustomNotification) => {\n      if (!notification.read && ((notification.app != this.config.appIdentifier) || (notification.app == this.config.appIdentifier && this.totalUnredMessagesCount != 0))) {\n        this.notificationsCount += 1;\n      }\n    });\n  }\n\n  readAllNotifications() {\n    if (!this.showNotifications) return;\n    this.notificationService.readAllNotifications().subscribe();\n    this.listNotifications.forEach(notification => notification.read = true);\n    this.countNotifications();\n  }\n\n  updateNotifications() {\n    if (!this.showNotifications) return;\n    this.notificationService.getNotifications().subscribe(\n      notifications => {\n        this.listNotifications = notifications as CustomNotification[];;\n        this.setNotification();\n      }\n    );\n  }\n\n  readNotificationAfterMouseStand(event: any,id: number) {\n    if (!this.showNotifications) return;\n    this.timer = setTimeout(() => {\n      event.target.classList.remove('notification-text-new');\n      this.notificationService.readOneNotification(id).subscribe();\n      this.listNotifications.forEach((notification: CustomNotification) => {\n        if (notification.id == id) {\n          notification.read = true;\n        }\n      });\n      this.countNotifications();\n    },1000);\n  }\n\n  abortReadNotificationAfterMouseStand() {\n    if (!this.showNotifications) return;\n    clearTimeout(this.timer);\n  }\n\n  redirect(notification: CustomNotification) {\n    if (!this.showNotifications) return;\n    if (notification.app == this.config.appIdentifier && this.properties?.chatUrl) {\n      window.location.href = this.properties.chatUrl;\n    }\n  }\n\n  login() {\n    this.keycloak.login(this.keycloakLoginOptions);\n  }\n\n  logout(): void {\n    this.webSocket.disconnect().then(() => {\n      this.keycloak.logout(this.config.redirectUri);\n    });\n  }\n\n  changeLanguage(lang: string) {\n    this.translateService.use(lang);\n  }\n\n  updateStatus(status: string) {\n    this.userService.updateStatus(status).subscribe({\n      next: (response) => {\n        if (response && this.userDTO) {\n          this.userDTO.propertiesDTO!.status = status;\n          this.auth.userDTOBehaviorSubject.next(this.userDTO);\n        }\n      },\n    });\n  }\n}","<nav class=\"navbar navbar-expand-xl\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"navbar-brand\">\r\n            <img alt=\"cube portal logo\" routerLink=\"/\" style=\"cursor:pointer; width: 275px; height: 50px;\"\r\n                src=\"assets/images/cube-portal-logo1.png\">\r\n        </div>\r\n\r\n        <button class=\"navbar-toggler shadow-none\" (click)=\"isNavbarCollapsed = !isNavbarCollapsed\">\r\n            <span>\r\n                <img alt=\"navbar toggler\" src=\"assets/images/navbar-toggler.png\">\r\n            </span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse justify-content-end\" [ngbCollapse]=\"isNavbarCollapsed\">\r\n            <ul class=\"list-group list-group-horizontal align-items-center justify-content-center\">\r\n                <li *ngIf=\"isNavbarCollapsed\" class=\"list-group-item\">\r\n                    <div class=\"nav-link user-menu\">\r\n                        {{userDTO?.name}} {{userDTO?.surname}}\r\n                    </div>\r\n                </li>\r\n\r\n                <li *ngIf=\"userDTO\" ngbDropdown class=\"list-group-item\">\r\n                    <div ngbDropdown class=\"dropdown\">\r\n                        <button ngbDropdownToggle class=\"user-menu\">\r\n                            <img alt=\"user status\" src=\"../../assets/images/{{ userDTO!.propertiesDTO!.status }}.png\" />\r\n                        </button>\r\n                        <div ngbDropdownMenu>\r\n                            <button *ngFor=\"let status of stati\" class=\"btn\" ngbDropdownItem\r\n                                (click)=\"updateStatus(status.name)\">\r\n                                <img class=\"me-2\" alt=\"{{status.name}}\" src=\"{{ status.iconPath }}\" />\r\n                                {{\"generic.\" + status.name | translate}}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n\r\n                <li ngbDropdown class=\"list-group-item\">\r\n                    <button *ngIf=\"!userDTO\" class=\"user-menu\" (click)=\"login()\">{{'Login'}}</button>\r\n                    <div *ngIf=\"userDTO\">\r\n                        <button ngbDropdownToggle class=\"user-menu\">\r\n                            <img alt=\"profilePicture\" class=\"rounded-5\" src=\"{{userDTO.propertiesDTO?.profilePicture}}\"\r\n                                width=\"32\" height=\"32\">\r\n                        </button>\r\n                        <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                            <button ngbDropdownItem routerLink=\"/profile\">{{\"generic.profile\"|translate}}</button>\r\n                            <button ngbDropdownItem (click)=\"logout()\">{{'Logout'}}</button>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n\r\n                <!-- Notifications Menu - Only shown when showNotifications is true -->\r\n                <li *ngIf=\"showNotifications && userDTO\" ngbDropdown [autoClose]=\"false\"\r\n                    class=\"list-group-item dropdown\">\r\n                    <div>\r\n                        <button alt=\"notification toggle\" ngbDropdownToggle class=\"user-menu\">\r\n                            <img height=\"32px\" alt=\"notification toggle\" src=\"assets/images/bell.png\"\r\n                                (click)=\"updateNotifications()\">\r\n                            <span *ngIf=\"notificationsCount!=0\" class=\"badge\">{{notificationsCount}}</span>\r\n                        </button>\r\n                        <ul ngbDropdownMenu class=\"dropdown-menu dropdown-menu-end\">\r\n                            <li ngbDropdownItem class=\"\">\r\n                                <div class=\"row d-flex justify-content-between align-items-center\">\r\n                                    <div class=\"col-10\">\r\n                                        <button class=\"dropdown-item p-0\"\r\n                                            routerLink=\"/notifications\"><strong>{{\"generic.notification-word\"|translate}}</strong></button>\r\n                                    </div>\r\n                                    <div class=\"col-2\">\r\n                                        <img style=\"cursor:pointer\" height=\"16px\" alt=\"read all notification\"\r\n                                            src=\"assets/images/read-all.png\" (click)=\"readAllNotifications()\">\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li *ngFor=\"let notification of listNotifications\" ngbDropdownItem>\r\n                                <div class=\"row\">\r\n                                    <div [ngClass]=\"notification.read ? 'col-12' : 'col-10'\" class=\"col\">\r\n                                        <div *ngIf=\"!notification.read && ((notification.app!='Chat') || (notification.app=='Chat' && totalUnredMessagesCount!=0))\"\r\n                                            class=\"notification-text notification-text-new\"\r\n                                            (mouseenter)=\"readNotificationAfterMouseStand($event, notification.id)\"\r\n                                            (mouseleave)=\"abortReadNotificationAfterMouseStand()\"\r\n                                            (click)=\"redirect(notification)\"\r\n                                            [ngClass]=\"notification.app == 'Chat' ? 'clickable' : null\">\r\n                                            <h5 class=\"my-auto\">{{notification.sentAt}}:</h5>\r\n                                            <span *ngIf=\"notification.app == 'Chat'\">{{totalUnredMessagesCount}}</span>\r\n                                            {{notification.message | translate}}\r\n                                            <hr class=\"dropdown-divider\">\r\n                                        </div>\r\n                                        <div *ngIf=\"notification.read && ((notification.app!='Chat') || (notification.app=='Chat' && totalUnredMessagesCount!=0))\"\r\n                                            class=\"notification-text text-muted\" (click)=\"redirect(notification)\"\r\n                                            [ngClass]=\"notification.app == 'Chat' ? 'clickable' : null\">\r\n                                            <h5 class=\"my-auto\">{{notification.sentAt}}:</h5>\r\n                                            <span *ngIf=\"notification.app == 'Chat'\">{{totalUnredMessagesCount}}</span>\r\n                                            {{notification.message | translate}}\r\n                                            <hr class=\"dropdown-divider\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"!notification.read && ((notification.app!='Chat') || (notification.app=='Chat' && totalUnredMessagesCount!=0))\"\r\n                                        class=\"col-2\">\r\n                                        <img src=\"assets/images/envelope.png\" alt=\"envelope icon\">\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n\r\n                <li ngbDropdown class=\"list-group-item\">\r\n                    <button ngbDropdownToggle class=\"user-menu\">\r\n                        <img alt=\"language flag\" src='{{\"lang.flag-picture\"|translate}}'>\r\n                    </button>\r\n                    <div ngbDropdownMenu class=\"dropdown-menu\">\r\n                        <button *ngFor=\"let language of languages\" ngbDropdownItem\r\n                            (click)=\"changeLanguage(language.langIdentifier)\">\r\n                            <img alt=\"language flag\" src='{{language.flagPath}}'>\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>","import { ModuleWithProviders,NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { HeaderComponent } from './component/header.component';\nimport { AuthService } from './services/auth/auth.service';\nimport { UserService } from './services/user/user.service';\nimport { WebSocketService } from './services/websocket/websocket.service';\nimport { SharedConfig } from './types/shared.interface';\nimport { NotificationService } from './services/notification/notification.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [HeaderComponent],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    FontAwesomeModule,\n    NgbModule,\n    RouterModule,\n    HttpClientModule\n  ],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule {\n  static forRoot(config: SharedConfig): ModuleWithProviders<HeaderModule> {\n    return {\n      ngModule: HeaderModule,\n      providers: [\n        NotificationService,\n        AuthService,\n        UserService,\n        WebSocketService,\n        {\n          provide: 'SHARED_CONFIG',\n          useValue: config\n        },\n        {\n          provide: 'BASE_URL',\n          useValue: config.baseUrl\n        },\n        {\n          provide: 'BASE_PORT',\n          useValue: config.basePort\n        },\n        {\n          provide: 'SEPARATOR',\n          useValue: config.separator\n        }\n      ]\n    };\n  }\n}","/*\n * Public API Surface of Cube Shared\n */\nexport * from './lib/types/shared.interface';\nexport * from './lib/component/header.component';\nexport * from './lib/header.module';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2"],"mappings":"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"}